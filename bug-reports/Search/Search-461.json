{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4543376?v=4",
        "events_url": "https://api.github.com/users/pafonta/events{/privacy}",
        "followers_url": "https://api.github.com/users/pafonta/followers",
        "following_url": "https://api.github.com/users/pafonta/following{/other_user}",
        "gists_url": "https://api.github.com/users/pafonta/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pafonta",
        "id": 4543376,
        "login": "pafonta",
        "node_id": "MDQ6VXNlcjQ1NDMzNzY=",
        "organizations_url": "https://api.github.com/users/pafonta/orgs",
        "received_events_url": "https://api.github.com/users/pafonta/received_events",
        "repos_url": "https://api.github.com/users/pafonta/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pafonta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pafonta/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pafonta"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/4543376?v=4",
            "events_url": "https://api.github.com/users/pafonta/events{/privacy}",
            "followers_url": "https://api.github.com/users/pafonta/followers",
            "following_url": "https://api.github.com/users/pafonta/following{/other_user}",
            "gists_url": "https://api.github.com/users/pafonta/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/pafonta",
            "id": 4543376,
            "login": "pafonta",
            "node_id": "MDQ6VXNlcjQ1NDMzNzY=",
            "organizations_url": "https://api.github.com/users/pafonta/orgs",
            "received_events_url": "https://api.github.com/users/pafonta/received_events",
            "repos_url": "https://api.github.com/users/pafonta/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/pafonta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pafonta/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/pafonta"
        }
    ],
    "author_association": "COLLABORATOR",
    "body": "## \ud83d\udc1b Bug description\r\n\r\nDuring the population of the database, one issue occurred:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1671, in _execute_context\r\n    context = constructor(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/default.py\", line 972, in _init_compiled\r\n    compiled.construct_params(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/sql/compiler.py\", line 1002, in construct_params\r\n    raise exc.InvalidRequestError(\r\nsqlalchemy.exc.InvalidRequestError: A value is required for bind parameter 'article_id' (Background on this error at: https://sqlalche.me/e/14/cd3x)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/bin/bbs_database\", line 33, in <module>\r\n    sys.exit(load_entry_point('bluesearch', 'console_scripts', 'bbs_database')())\r\n  File \"/Users/edelattr/Documents/Projects/BlueBrainSearch/Search/src/bluesearch/entrypoint/database/parent.py\", line 63, in main\r\n    command_map[command](**kwargs)  # type: ignore\r\n  File \"/Users/edelattr/Documents/Projects/BlueBrainSearch/Search/src/bluesearch/entrypoint/database/add.py\", line 150, in run\r\n    con.execute(article_query, *article_mappings)\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1263, in execute\r\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/sql/elements.py\", line 323, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1452, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1677, in _execute_context\r\n    self._handle_dbapi_exception(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1995, in _handle_dbapi_exception\r\n    util.raise_(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/util/compat.py\", line 207, in raise_\r\n    raise exception\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/base.py\", line 1671, in _execute_context\r\n    context = constructor(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/engine/default.py\", line 972, in _init_compiled\r\n    compiled.construct_params(\r\n  File \"/Users/edelattr/.pyenv/versions/3.8.3/envs/bluesearch38/lib/python3.8/site-packages/sqlalchemy/sql/compiler.py\", line 1002, in construct_params\r\n    raise exc.InvalidRequestError(\r\nsqlalchemy.exc.StatementError: (sqlalchemy.exc.InvalidRequestError) A value is required for bind parameter 'article_id'\r\n[SQL: INSERT INTO articles(article_id, title, authors, abstract, pubmed_id, pmc_id, doi) VALUES(?, ?, ?, ?, ?, ?, ?)]\r\n(Background on this error at: https://sqlalche.me/e/14/cd3x)\r\n```\r\nAfter investigating the reason of the issue, it appears that it comes from the fact that there are no article in the input_folder. An error also occurs if there are no sentences (the database is then complaining about the `section_name`).\r\n\r\nIf we look closer at the code:\r\n1. We first populate two lists:\r\n```\r\narticle_mappings = []\r\nsentence_mappings = []\r\n```\r\n2. Then we directly try to add those lists into the database (without checking if the two lists mentioned above are empty or not).\r\n\r\n\r\n## To reproduce\r\n\r\nCode to reproduce the behavior:\r\n\r\n```\r\nbbs_database init temp.db\r\nmkdir empty_folder\r\nbbs_database add temp.db empty_folder\r\n```\r\n\r\n## Expected behavior\r\n\r\nIt could be nice \r\n- To check if `article_mappings` or `sentence_mappings` are empty after reading the articles\r\n- Either warn the user or raise a custom error \r\n- Checking that there are no `articles` in the folder before loading anything (for example the `spacy` model) could also speed up the code. \r\n\r\n\r\n\r\n",
    "closed_at": "2021-09-30T08:15:32Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4543376?v=4",
        "events_url": "https://api.github.com/users/pafonta/events{/privacy}",
        "followers_url": "https://api.github.com/users/pafonta/followers",
        "following_url": "https://api.github.com/users/pafonta/following{/other_user}",
        "gists_url": "https://api.github.com/users/pafonta/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pafonta",
        "id": 4543376,
        "login": "pafonta",
        "node_id": "MDQ6VXNlcjQ1NDMzNzY=",
        "organizations_url": "https://api.github.com/users/pafonta/orgs",
        "received_events_url": "https://api.github.com/users/pafonta/received_events",
        "repos_url": "https://api.github.com/users/pafonta/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pafonta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pafonta/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pafonta"
    },
    "comments": 0,
    "comments_content": [],
    "comments_url": "https://api.github.com/repos/BlueBrain/Search/issues/461/comments",
    "created_at": "2021-09-28T14:57:51Z",
    "events_url": "https://api.github.com/repos/BlueBrain/Search/issues/461/events",
    "html_url": "https://github.com/BlueBrain/Search/issues/461",
    "id": 1009865276,
    "labels": [
        {
            "color": "d73a4a",
            "default": false,
            "description": "Something isn't working",
            "id": 1938483675,
            "name": "\ud83d\udc1b bug fix",
            "node_id": "MDU6TGFiZWwxOTM4NDgzNjc1",
            "url": "https://api.github.com/repos/BlueBrain/Search/labels/%F0%9F%90%9B%20bug%20fix"
        },
        {
            "color": "1D76DB",
            "default": false,
            "description": "Creation and maintenance of a database of scientific literature",
            "id": 2812917713,
            "name": "\ud83d\uddc4\ufe0f database",
            "node_id": "MDU6TGFiZWwyODEyOTE3NzEz",
            "url": "https://api.github.com/repos/BlueBrain/Search/labels/%F0%9F%97%84%EF%B8%8F%20database"
        }
    ],
    "labels_url": "https://api.github.com/repos/BlueBrain/Search/issues/461/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODu5QYM48MVI8",
    "number": 461,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/BlueBrain/Search/issues/461/reactions"
    },
    "repository_url": "https://api.github.com/repos/BlueBrain/Search",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/BlueBrain/Search/issues/461/timeline",
    "title": "Stop trying to populate the database if no article or no sentences",
    "updated_at": "2021-09-30T08:15:32Z",
    "url": "https://api.github.com/repos/BlueBrain/Search/issues/461",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/47669575?v=4",
        "events_url": "https://api.github.com/users/EmilieDel/events{/privacy}",
        "followers_url": "https://api.github.com/users/EmilieDel/followers",
        "following_url": "https://api.github.com/users/EmilieDel/following{/other_user}",
        "gists_url": "https://api.github.com/users/EmilieDel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/EmilieDel",
        "id": 47669575,
        "login": "EmilieDel",
        "node_id": "MDQ6VXNlcjQ3NjY5NTc1",
        "organizations_url": "https://api.github.com/users/EmilieDel/orgs",
        "received_events_url": "https://api.github.com/users/EmilieDel/received_events",
        "repos_url": "https://api.github.com/users/EmilieDel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/EmilieDel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/EmilieDel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/EmilieDel"
    }
}