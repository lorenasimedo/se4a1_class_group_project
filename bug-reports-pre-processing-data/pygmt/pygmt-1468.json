{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "**Description of the problem**\r\n\r\n<!-- Please be as detailed as you can when describing an issue. The more information we have, the easier it will be for us to track this down. -->\r\n\r\nSince GMT only supports regular grids, PyGMT has a check to make sure all point spacings are the same ([here](https://github.com/GenericMappingTools/pygmt/blob/8a6db70f1a9786007705a3888300028af4044de1/pygmt/clib/conversion.py#L97)):\r\n\r\n```python\r\ncoord = grid.coords[dim].values\r\ncoord_incs = coord[1:] - coord[0:-1]\r\ncoord_inc = coord_incs[0]\r\nif not np.allclose(coord_incs, coord_inc):\r\n    raise GMTInvalidInput(\r\n        \"Grid appears to have irregular spacing in the '{}' dimension.\".format(\r\n            dim\r\n        )\r\n    )\r\n```\r\n\r\nThe problem is that the `np.allclose` function has variable precision arguments to determine whether it fails or passes. So the degree to which we check for uniform spacing depends on coordinate units. This is not ideal as this check can fail in cases where the grid is evenly spaced within an acceptable accuracy for coordinates but maybe not for `allclose`. \r\n\r\nI'm not sure there is a good solution here since:\r\n\r\n1. This will vary with units so it's hard to generalize.\r\n2. This part of the code is deep in the internals so getting the `rtol` and `atol` arguments from the user into this part of the code will be awkward and bug prone.\r\n3. Should this really be an exception if GMT may be OK with the coordinates?\r\n\r\nI would propose turning this into a warning instead and let GMT fail if it really thinks it can't handle the grid. What do others think? I'm not sure that would solve the problem or if GMT will be equally strict.\r\n\r\n**Full code that generated the error**\r\n\r\n```python\r\ngrid = xr.open_dataarray(\"topography-earth-10arcmin.nc\")\r\nfig = pygmt.Figure()\r\nfig.grdimage(grid)\r\nfig.show()\r\n```\r\n\r\nUsing this grid file: [topography-earth-10arcmin.nc.zip](https://github.com/GenericMappingTools/pygmt/files/7065984/topography-earth-10arcmin.nc.zip) (GitHub required a zip archive for this)\r\n\r\nFor context, this grid is coming from the [ICGEM](http://icgem.gfz-potsdam.de/home) calculation service. I tracked down the error to them using the equivalent of `np.arange` to generate the grid coordinates instead of `np.linspace` (which is the correct way to do it). \r\n\r\n**Full error message**\r\n\r\n<details>\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nGMTInvalidInput                           Traceback (most recent call last)\r\n/tmp/ipykernel_207888/3701624484.py in <module>\r\n      1 fig = pygmt.Figure()\r\n----> 2 fig.grdimage(grid)\r\n      3 fig.show()\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/site-packages/pygmt/helpers/decorators.py in new_module(*args, **kwargs)\r\n    580                     )\r\n    581                     warnings.warn(msg, category=SyntaxWarning, stacklevel=2)\r\n--> 582             return module_func(*args, **kwargs)\r\n    583 \r\n    584         new_module.aliases = aliases\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/site-packages/pygmt/helpers/decorators.py in new_module(*args, **kwargs)\r\n    723                         kwargs[arg] = separators[fmt].join(f\"{item}\" for item in value)\r\n    724             # Execute the original function and return its output\r\n--> 725             return module_func(*args, **kwargs)\r\n    726 \r\n    727         return new_module\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/site-packages/pygmt/src/grdimage.py in grdimage(self, grid, **kwargs)\r\n    171                 kwargs[\"I\"] = stack.enter_context(shading_context)\r\n    172 \r\n--> 173             fname = stack.enter_context(file_context)\r\n    174             arg_str = \" \".join([fname, build_arg_string(kwargs)])\r\n    175             lib.call_module(\"grdimage\", arg_str)\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/contextlib.py in enter_context(self, cm)\r\n    427         _cm_type = type(cm)\r\n    428         _exit = _cm_type.__exit__\r\n--> 429         result = _cm_type.__enter__(cm)\r\n    430         self._push_cm_exit(cm, _exit)\r\n    431         return result\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/contextlib.py in __enter__(self)\r\n    115         del self.args, self.kwds, self.func\r\n    116         try:\r\n--> 117             return next(self.gen)\r\n    118         except StopIteration:\r\n    119             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/site-packages/pygmt/clib/session.py in virtualfile_from_grid(self, grid)\r\n   1344         # guarantees that the copy will be around until the virtual file is\r\n   1345         # closed. The conversion is implicit in dataarray_to_matrix.\r\n-> 1346         matrix, region, inc = dataarray_to_matrix(grid)\r\n   1347 \r\n   1348         family = \"GMT_IS_GRID|GMT_VIA_MATRIX\"\r\n\r\n~/bin/conda/envs/rockhound-data/lib/python3.9/site-packages/pygmt/clib/conversion.py in dataarray_to_matrix(grid)\r\n     96         coord_inc = coord_incs[0]\r\n     97         if not np.allclose(coord_incs, coord_inc):\r\n---> 98             raise GMTInvalidInput(\r\n     99                 \"Grid appears to have irregular spacing in the '{}' dimension.\".format(\r\n    100                     dim\r\n\r\nGMTInvalidInput: Grid appears to have irregular spacing in the 'longitude' dimension.\r\n```\r\n\r\n</details>\r\n\r\n**System information**\r\n\r\nPlease paste the output of `python -c \"import pygmt; pygmt.show_versions()\"`:\r\n\r\n```\r\nPyGMT information:\r\n  version: v0.4.1\r\nSystem information:\r\n  python: 3.9.0 | packaged by conda-forge | (default, Nov 26 2020, 07:57:39)  [GCC 9.3.0]\r\n  executable: /home/leo/bin/conda/envs/rockhound-data/bin/python\r\n  machine: Linux-5.13.11-1-MANJARO-x86_64-with-glibc2.33\r\nDependency information:\r\n  numpy: 1.21.2\r\n  pandas: 1.3.2\r\n  xarray: 0.19.0\r\n  netCDF4: 1.5.7\r\n  packaging: 21.0\r\n  ghostscript: 9.54.0\r\n  gmt: 6.2.0\r\nGMT library information:\r\n  binary dir: /home/leo/bin/conda/envs/rockhound-data/bin\r\n  cores: 8\r\n  grid layout: rows\r\n  library path: /home/leo/bin/conda/envs/rockhound-data/lib/libgmt.so\r\n  padding: 2\r\n  plugin dir: /home/leo/bin/conda/envs/rockhound-data/lib/gmt/plugins\r\n  share dir: /home/leo/bin/conda/envs/rockhound-data/share/gmt\r\n  version: 6.2.0\r\n```\r\n",
    "closed_at": "2021-10-04T07:11:26Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
        "events_url": "https://api.github.com/users/seisman/events{/privacy}",
        "followers_url": "https://api.github.com/users/seisman/followers",
        "following_url": "https://api.github.com/users/seisman/following{/other_user}",
        "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seisman",
        "id": 3974108,
        "login": "seisman",
        "node_id": "MDQ6VXNlcjM5NzQxMDg=",
        "organizations_url": "https://api.github.com/users/seisman/orgs",
        "received_events_url": "https://api.github.com/users/seisman/received_events",
        "repos_url": "https://api.github.com/users/seisman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seisman"
    },
    "comments": 3,
    "comments_content": [
        {
            "author_association": "MEMBER",
            "body": "Hi Leo! I agree that a warning might make more sense than an error in this case since the `np.allclose` test can be overly strict. I haven't had a look at your data, but am aware that others (e.g. https://forum.generic-mapping-tools.org/t/how-to-plot-temperature/1760/9) have had trouble with similar problems.\r\n\r\nCould you try to modify the code to raise a warning instead, and see if it works for your use case? If so, we can look into pulling a bugfix together. The complicated part will be to have a unit test with some data that has irregular spacing that fails on `np.allclose` but passes for GMT.",
            "created_at": "2021-08-27T11:01:48Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1468#issuecomment-907118664",
            "id": 907118664,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468",
            "node_id": "IC_kwDOBRZfO842EYhI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907118664/reactions"
            },
            "updated_at": "2021-08-27T11:01:48Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907118664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, I can give it a shot. Will probably take a while, though, so if anyone else has this problem or is keen to give this a shot that\u2019s fine with me. If there\u2019s no hurry, I dust off my PyGMT clone and finally get a commit in \ud83d\ude42 Gotta ramp it up since @seisman has overtaken me already \ud83d\udcaa\ud83c\udffd \r\n\r\nIf this works, the testing shouldn\u2019t be too hard (famous last words). Generating the grid points with `np.arange` using the parameters of the grid I attached should do the trick. A good option will be to isolate the check in a separate function to make it easier to test in isolation.",
            "created_at": "2021-08-27T12:07:55Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1468#issuecomment-907153495",
            "id": 907153495,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468",
            "node_id": "IC_kwDOBRZfO842EhBX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907153495/reactions"
            },
            "updated_at": "2021-08-27T12:09:25Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907153495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/290082?v=4",
                "events_url": "https://api.github.com/users/leouieda/events{/privacy}",
                "followers_url": "https://api.github.com/users/leouieda/followers",
                "following_url": "https://api.github.com/users/leouieda/following{/other_user}",
                "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leouieda",
                "id": 290082,
                "login": "leouieda",
                "node_id": "MDQ6VXNlcjI5MDA4Mg==",
                "organizations_url": "https://api.github.com/users/leouieda/orgs",
                "received_events_url": "https://api.github.com/users/leouieda/received_events",
                "repos_url": "https://api.github.com/users/leouieda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leouieda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> 3\\. Should this really be an exception if GMT may be OK with the coordinates?\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/blob/8a6db70f1a9786007705a3888300028af4044de1/pygmt/clib/session.py#L1346-L1358\r\n\r\nPlease note that we can only pass the ranges and the increments (in x and y directions) to the GMT C API, so it's always assumed that the grid has uniform spacings. In other words, we should raise a warning like \"GMT only support grids with uniform spacing but the grid xxx may be non-uniform\".",
            "created_at": "2021-08-27T16:11:32Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1468#issuecomment-907314209",
            "id": 907314209,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468",
            "node_id": "IC_kwDOBRZfO842FIQh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907314209/reactions"
            },
            "updated_at": "2021-08-27T16:11:32Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/907314209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468/comments",
    "created_at": "2021-08-27T09:53:01Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1468",
    "id": 981074891,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2021-10-31T23:31:11Z",
        "closed_issues": 137,
        "created_at": "2021-03-16T21:12:52Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
            "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
            "followers_url": "https://api.github.com/users/weiji14/followers",
            "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
            "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/weiji14",
            "id": 23487320,
            "login": "weiji14",
            "node_id": "MDQ6VXNlcjIzNDg3MzIw",
            "organizations_url": "https://api.github.com/users/weiji14/orgs",
            "received_events_url": "https://api.github.com/users/weiji14/received_events",
            "repos_url": "https://api.github.com/users/weiji14/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/weiji14"
        },
        "description": "https://github.com/GenericMappingTools/pygmt/issues/1576",
        "due_on": "2021-10-29T07:00:00Z",
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/8",
        "id": 6553956,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/8/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1Mzk1Ng==",
        "number": 8,
        "open_issues": 0,
        "state": "closed",
        "title": "0.5.0",
        "updated_at": "2022-09-22T11:49:00Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/8"
    },
    "node_id": "MDU6SXNzdWU5ODEwNzQ4OTE=",
    "number": 1468,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468/timeline",
    "title": "PyGMT is too strict when checking for irregular grids",
    "updated_at": "2021-10-04T07:11:26Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1468",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/290082?v=4",
        "events_url": "https://api.github.com/users/leouieda/events{/privacy}",
        "followers_url": "https://api.github.com/users/leouieda/followers",
        "following_url": "https://api.github.com/users/leouieda/following{/other_user}",
        "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/leouieda",
        "id": 290082,
        "login": "leouieda",
        "node_id": "MDQ6VXNlcjI5MDA4Mg==",
        "organizations_url": "https://api.github.com/users/leouieda/orgs",
        "received_events_url": "https://api.github.com/users/leouieda/received_events",
        "repos_url": "https://api.github.com/users/leouieda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/leouieda"
    }
}