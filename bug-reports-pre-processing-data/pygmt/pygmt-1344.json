{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "The documentation for `grdtrack` states that an argument for `newcolname` is required if the argument for `points` is a DataFrame. However, a `GMTInvalidInput` error requiring an argument for `newcolname` is raised if `points` is a numpy array or a list as well.\r\n\r\n**Full code that generated the error**\r\n*Import statement*\r\n\r\n```python\r\nimport pygmt\r\nimport numpy as np\r\ngrid = pygmt.datasets.load_earth_relief(region=[-5, 5, -5, 5])\r\n```\r\n*Points as a numpy array*\r\n```python\r\npoints_matrix = np.array([[1,1], [1,2], [2,2]])\r\nassert type(points_matrix) == np.ndarray\r\ngrdtrack_output = pygmt.grdtrack(points=points_matrix, grid=grid)\r\n```\r\n*Points as a list*\r\n```python\r\npoints_list = [[1,1], [1,2], [2,2]]\r\nassert type(points_list) == list\r\ngrdtrack_output = pygmt.grdtrack(points=points_list, grid=grid)\r\n```\r\n\r\n**Full error message**\r\n\r\n```\r\nGMTInvalidInput: Please pass in a str to 'newcolname'\r\n```\r\n\r\nThe error is raised in lines 251-252 in `grdtrack.py`\r\n```python\r\nif data_kind(points) == \"matrix\" and newcolname is None:\r\n    raise GMTInvalidInput(\"Please pass in a str to 'newcolname'\")\r\n```\r\nIt looks like `data_kind()` won't distinguish between a DataFrame and a numpy array and returns \"matrix\" in both instances. Should `newcolname` be a required parameter for all matrix-type data, since the function still returns a DataFrame if no outfile is specified, or should the error handling check to make sure that `points` is a DataFrame? ",
    "closed_at": "2021-07-08T22:03:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    },
    "comments": 5,
    "comments_content": [
        {
            "author_association": "MEMBER",
            "body": "I think the motivation for having newcolname as required for the dataframe input and output case case was probably because two columns cannot have the same name, so it's not simple to use a default column name for the output. Since this isn't a problem when creating a dataframe from numpy inputs, I do not think it should be required for that case.",
            "created_at": "2021-06-25T21:05:05Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344#issuecomment-868832706",
            "id": 868832706,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2ODgzMjcwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/868832706/reactions"
            },
            "updated_at": "2021-06-25T21:05:05Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/868832706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another note regarding `newcolname` (originally posted in https://github.com/GenericMappingTools/pygmt/pull/1345#issuecomment-870091881) - it should also accept a list with multiple column names for instances in which multiple grids are sampled.",
            "created_at": "2021-06-30T22:40:59Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344#issuecomment-871772840",
            "id": 871772840,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTc3Mjg0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/871772840/reactions"
            },
            "updated_at": "2021-06-30T22:40:59Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/871772840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@meghanrjones So are you thinking there should be a check to see if the type is not a DataFrame and then it will substitute in a default column name is it check passes?",
            "created_at": "2021-07-06T14:22:17Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344#issuecomment-874805157",
            "id": 874805157,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgwNTE1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874805157/reactions"
            },
            "updated_at": "2021-07-06T14:22:17Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874805157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29518865?v=4",
                "events_url": "https://api.github.com/users/willschlitzer/events{/privacy}",
                "followers_url": "https://api.github.com/users/willschlitzer/followers",
                "following_url": "https://api.github.com/users/willschlitzer/following{/other_user}",
                "gists_url": "https://api.github.com/users/willschlitzer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/willschlitzer",
                "id": 29518865,
                "login": "willschlitzer",
                "node_id": "MDQ6VXNlcjI5NTE4ODY1",
                "organizations_url": "https://api.github.com/users/willschlitzer/orgs",
                "received_events_url": "https://api.github.com/users/willschlitzer/received_events",
                "repos_url": "https://api.github.com/users/willschlitzer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/willschlitzer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/willschlitzer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/willschlitzer"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @meghanrjones So are you thinking there should be a check to see if the type is not a DataFrame and then it will substitute in a default column name is it check passes?\r\n\r\nI imagine that the output DataFrame column names for non-DataFrame input when newcolname is not given could be the column index, similar to the default pandas behavior for pandas.read_csv(file,header=None).",
            "created_at": "2021-07-06T14:50:51Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344#issuecomment-874829253",
            "id": 874829253,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgyOTI1Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874829253/reactions"
            },
            "updated_at": "2021-07-06T14:50:51Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874829253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > @meghanrjones So are you thinking there should be a check to see if the type is not a DataFrame and then it will substitute in a default column name is it check passes?\r\n> \r\n> I imagine that the output DataFrame column names for non-DataFrame input when newcolname is not given could be the column index, similar to the default pandas behavior for pandas.read_csv(file,header=None).\r\n\r\nSince the default argument for `newcolname` is `None`, I think the easiest solution is to change the if statement to raise `GMTInvalidInput` if `points` are a DataFrame. ",
            "created_at": "2021-07-06T15:33:00Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344#issuecomment-874863732",
            "id": 874863732,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDg2MzczMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874863732/reactions"
            },
            "updated_at": "2021-07-06T15:33:00Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/874863732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29518865?v=4",
                "events_url": "https://api.github.com/users/willschlitzer/events{/privacy}",
                "followers_url": "https://api.github.com/users/willschlitzer/followers",
                "following_url": "https://api.github.com/users/willschlitzer/following{/other_user}",
                "gists_url": "https://api.github.com/users/willschlitzer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/willschlitzer",
                "id": 29518865,
                "login": "willschlitzer",
                "node_id": "MDQ6VXNlcjI5NTE4ODY1",
                "organizations_url": "https://api.github.com/users/willschlitzer/orgs",
                "received_events_url": "https://api.github.com/users/willschlitzer/received_events",
                "repos_url": "https://api.github.com/users/willschlitzer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/willschlitzer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/willschlitzer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/willschlitzer"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344/comments",
    "created_at": "2021-06-21T07:48:57Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1344",
    "id": 925929527,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5MjU5Mjk1Mjc=",
    "number": 1344,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344/timeline",
    "title": "grdtrack raises an input error when points are not a DataFrame and no column name is specified",
    "updated_at": "2021-07-08T22:03:57Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1344",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29518865?v=4",
        "events_url": "https://api.github.com/users/willschlitzer/events{/privacy}",
        "followers_url": "https://api.github.com/users/willschlitzer/followers",
        "following_url": "https://api.github.com/users/willschlitzer/following{/other_user}",
        "gists_url": "https://api.github.com/users/willschlitzer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/willschlitzer",
        "id": 29518865,
        "login": "willschlitzer",
        "node_id": "MDQ6VXNlcjI5NTE4ODY1",
        "organizations_url": "https://api.github.com/users/willschlitzer/orgs",
        "received_events_url": "https://api.github.com/users/willschlitzer/received_events",
        "repos_url": "https://api.github.com/users/willschlitzer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/willschlitzer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/willschlitzer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/willschlitzer"
    }
}