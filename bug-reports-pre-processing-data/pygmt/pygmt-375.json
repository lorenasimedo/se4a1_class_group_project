{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "`grdimage` of pygmt does not correctly plot xarray DataArrays when they do not contain the redundant column of data at 360 E. \r\n\r\nUsing pygmt directly with a netcdf file provides the correct output, such as with a command like:\r\n```\r\nfig.grdimage('test.grd', region='g', projection='A0/0/6i')\r\n```\r\n![test](https://user-images.githubusercontent.com/8697285/68494841-61850180-024f-11ea-94c8-d7c8fea5f069.png)\r\n\r\nHowever, here is the same output generated by pygmt when using an xarray in memory:\r\n```\r\nfig.grdimage(grid, region='g', projection='A0/0/6i')\r\n```\r\n![longitude](https://user-images.githubusercontent.com/8697285/68494908-7c577600-024f-11ea-84e2-a3b8f740f7df.png)",
    "closed_at": "2020-07-16T05:34:39Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    },
    "comments": 7,
    "comments_content": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "And here is a simple script that demonstrates this problem:\r\n```\r\n# create a grid that spans 0 359 E, and -89 to 90 N.\r\nlongitude = np.arange(0, 360, 1)\r\nlatitude = np.arange(-89, 91, 1)\r\nx = np.sin(np.deg2rad(longitude))\r\ny = np.linspace(start=0, stop=1, num=180)\r\ndata = y[:, np.newaxis] * x\r\n\r\n# create a DataArray, and then export this as a netcdf file\r\ndataarray = xr.DataArray(data, coords=[('latitude', latitude,\r\n                                       {'units': 'degrees_north'}),\r\n                                       ('longitude', longitude,\r\n                                       {'units': 'degrees_east'})], \r\n                         attrs = {'actual_range': [-1, 1]})\r\ndataset = dataarray.to_dataset(name='dataarray')\r\ndataset.to_netcdf('test.grd')\r\n\r\nfig = pygmt.Figure()\r\n\r\n# create a projected image using the DataArray in memory and the netcdf file\r\nfig.grdimage(dataset.dataarray, region='g', projection='A0/0/6i')\r\nfig.grdimage('test.grd', region='g', projection='A0/0/6i', X='6.2i')\r\n```\r\n![test](https://user-images.githubusercontent.com/8697285/68535464-514e4e80-0343-11ea-9b75-ce541edd0a6e.png)",
            "created_at": "2019-11-09T21:53:48Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-552141105",
            "id": 552141105,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE0MTEwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552141105/reactions"
            },
            "updated_at": "2019-11-09T21:53:48Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552141105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
                "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
                "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarkWieczorek",
                "id": 8697285,
                "login": "MarkWieczorek",
                "node_id": "MDQ6VXNlcjg2OTcyODU=",
                "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
                "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
                "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarkWieczorek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This might be related to pixel registered vs grid node registered grids. GMT makes a lot of internal assumptions when reading the netCDF file that we don't when converting the xarray.DataArray.",
            "created_at": "2019-11-12T09:46:54Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-552816586",
            "id": 552816586,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjgxNjU4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552816586/reactions"
            },
            "updated_at": "2019-11-12T09:46:54Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552816586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/290082?v=4",
                "events_url": "https://api.github.com/users/leouieda/events{/privacy}",
                "followers_url": "https://api.github.com/users/leouieda/followers",
                "following_url": "https://api.github.com/users/leouieda/following{/other_user}",
                "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leouieda",
                "id": 290082,
                "login": "leouieda",
                "node_id": "MDQ6VXNlcjI5MDA4Mg==",
                "organizations_url": "https://api.github.com/users/leouieda/orgs",
                "received_events_url": "https://api.github.com/users/leouieda/received_events",
                "repos_url": "https://api.github.com/users/leouieda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leouieda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If I use the `-V` option with the file `test.grd`, gmt warns me that it assumes it is gridline registered. If I define the longitude attribute `actual_range = [0, 359]`, then I don't get this warning (in this case, the gmt code confirms that it is gridline and doesn't need to make any guesses). In either case, defining `actual_range` or not produces the same output.\r\n\r\nAs for pygmt, grdimage creates a virtual file using\r\n```\r\nfile_context = lib.virtualfile_from_grid(grid)\r\n```\r\nAnd here is the code for this function\r\n```\r\n        matrix, region, inc = dataarray_to_matrix(grid)\r\n        family = \"GMT_IS_GRID|GMT_VIA_MATRIX\"\r\n        geometry = \"GMT_IS_SURFACE\"\r\n        gmt_grid = self.create_data(\r\n            family, geometry, mode=\"GMT_CONTAINER_ONLY\", ranges=region, inc=inc\r\n        )\r\n        self.put_matrix(gmt_grid, matrix)\r\n        args = (family, geometry, \"GMT_IN|GMT_IS_REFERENCE\", gmt_grid)\r\n        with self.open_virtual_file(*args) as vfile:\r\n            yield vfile\r\n```\r\nIf you look at `create_data()`, you will see that there is an optional keyword `registration`. However, this keyword is NOT used in the routine. There *is* a variable `registration_int`, but this appears to be hardcoded to be `GMT_GRID_NODE_REG`\r\n\r\nSo, to the best of my knowledge, pygmt is assuming that **all** xarrays are gridline registered. If this is the case, this is a bug.\r\n\r\nThere are probably one of three ways to resolve this problem:\r\n* `pygmt`: pygmt should first explicitly allow the user to define if the data are gridline or pixel registered. If they are gridline registered, it should then check if the redundant boundary condition is provided, and if not to add an extra row to the internal data. I am not sure where the code should be modified for this, but perhaps `dataarray_to_matrix` would be the best.\r\n* `pygmt`: The `virtualfile_from_grid` should return a virtual `netcdf` file (which gmt can parse just fine). My assumption is that the virtual file is just an arbitrary binary datafile that `gmt` is having a hard time understanding how to decode.\r\n2. `gmt`: gmt's grdimage appears to have a bug when parsing pygmt's `virtual_file` input. If this is the case, we should open an issue there. I don't know enough about how gmt reads such generic files to debug this myself. Perhaps it is possible to specify in the vitrual file that the redundant longitude is missing.\r\n\r\n**Edit:** by the way, I think that pygmt routines should have a keyword `verbose=True` which corresponds to `-V`",
            "created_at": "2019-11-12T10:57:56Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-552843927",
            "id": 552843927,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1Mjg0MzkyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552843927/reactions"
            },
            "updated_at": "2019-11-12T11:16:41Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/552843927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
                "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
                "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarkWieczorek",
                "id": 8697285,
                "login": "MarkWieczorek",
                "node_id": "MDQ6VXNlcjg2OTcyODU=",
                "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
                "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
                "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarkWieczorek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Could you let me know how gmt reads the pygmt virtual files? I looked through the gmt code a little, and I am going to guess that the file format is `id=bf: GMT native, C-binary format (32-bit float)`. If I had to guess, this file format probably gets parsed by the function `gmtio_bin_input` that is in the file `gmt_io.c`. After confirmation, I will open an issue at gmt to see if this is something that they should fix.\r\n\r\nAlso, it appears that this doesn't affect all map projections. Here the same image as above, but in a mollweide projection:\r\n![moll](https://user-images.githubusercontent.com/8697285/68695889-2733a100-057c-11ea-8195-2fc247fea671.png)\r\n\r\n\r\n\r\n",
            "created_at": "2019-11-12T17:42:59Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-553006997",
            "id": 553006997,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzAwNjk5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553006997/reactions"
            },
            "updated_at": "2019-11-12T17:42:59Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553006997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
                "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
                "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarkWieczorek",
                "id": 8697285,
                "login": "MarkWieczorek",
                "node_id": "MDQ6VXNlcjg2OTcyODU=",
                "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
                "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
                "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarkWieczorek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, the ol' gridline vs pixel based registration problem. I think you hit the nail on the head there @MarkWieczorek. I'm pretty sure `xarray` uses centre-based coordinates (i.e. pixel-based registration) and if pygmt defaults to gridline registration, then this is definitely a serious issue. I've hit this time and time again before (e.g. at https://github.com/weiji14/deepbedmap/pull/150) and it just keeps coming back to haunt me...\r\n\r\nNot sure if setting the default registration to pixel-based would solve the issue (since we're using xarray, it might be necessary?), but ~~I'll try and look into it tomorrow if I have some mental bandwidth to do so (running a [\"FOSS4G Community Day\"](https://2019.foss4g-oceania.org/community-day/) for PyGMT)~~ Edit: Putting the Windows installation issue on a higher priority. If you've found a fix though, feel free to submit a Pull Request and I can review it.",
            "created_at": "2019-11-14T10:01:47Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-553815355",
            "id": 553815355,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzgxNTM1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553815355/reactions"
            },
            "updated_at": "2019-11-15T19:46:25Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553815355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think that this is a pixel related issue. pygmt uses the routine `dataarray_to_matrix` to extract the data maxtrix from an xarray DataArray and then returns this unmodified as a numpy array. As far as I can tell, pygmt assumes that all DataArrays are gridline registered, and the example I provide above is for gridline registered data.\r\n\r\nAs you say, xarray used center-based coordinates, **but this corresponds to gridline registration in gmt.** (The coordinates are at the grid line intersections that occur at the center of the pixel, not the edges).\r\n\r\nIt is possible that gmt is *misinterpreting* the virtual file as pixel registered, and if this is the case, this is a bug with gmt. It is conceivable that gmt uses the ration of nlat and nlon to guess the registration, and since my grid doesn't include the redundant longitude at 360E, I could perhaps see this being a problem if gmt has to guess the registration.",
            "created_at": "2019-11-14T10:40:07Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-553830012",
            "id": 553830012,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzgzMDAxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553830012/reactions"
            },
            "updated_at": "2019-11-14T10:40:07Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/553830012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
                "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
                "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarkWieczorek",
                "id": 8697285,
                "login": "MarkWieczorek",
                "node_id": "MDQ6VXNlcjg2OTcyODU=",
                "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
                "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
                "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarkWieczorek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hi @MarkWieczorek, sorry for not following up on this soon enough. I think we've found the issue, and it's probably because the virtualfile mechanism assumes all xarray grids as Cartesian instead of Geographic (see https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647755091).\r\n\r\nWe're working on allowing users to tell PyGMT whether their grid is Cartesian/Geographic, and Pixel/Gridline registered. This might take some time to implement as there's a lot of issues to iron out, and the team will be busy with GMT 6.1.0. But you can provide some feedback on #487 which decides what the recommended default will be going forward.",
            "created_at": "2020-06-23T00:00:36Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375#issuecomment-647828033",
            "id": 647828033,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzgyODAzMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647828033/reactions"
            },
            "updated_at": "2020-06-23T00:00:36Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647828033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375/comments",
    "created_at": "2019-11-08T16:47:30Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/375",
    "id": 520118862,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2020-09-17T21:25:23Z",
        "closed_issues": 55,
        "created_at": "2020-04-16T23:17:22Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
            "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
            "followers_url": "https://api.github.com/users/weiji14/followers",
            "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
            "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/weiji14",
            "id": 23487320,
            "login": "weiji14",
            "node_id": "MDQ6VXNlcjIzNDg3MzIw",
            "organizations_url": "https://api.github.com/users/weiji14/orgs",
            "received_events_url": "https://api.github.com/users/weiji14/received_events",
            "repos_url": "https://api.github.com/users/weiji14/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/weiji14"
        },
        "description": "Bump minimum required GMT version to 6.1.1 or newer (#577). Ensure plotting xarray grids doesn't crash anymore and works for most cases (#560). Support datetime-like inputs to pygmt.plot (#464) and the region argument (#562).",
        "due_on": "2020-09-11T07:00:00Z",
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/2",
        "id": 5318234,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/2/labels",
        "node_id": "MDk6TWlsZXN0b25lNTMxODIzNA==",
        "number": 2,
        "open_issues": 0,
        "state": "closed",
        "title": "0.2.0",
        "updated_at": "2020-10-23T22:19:37Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/2"
    },
    "node_id": "MDU6SXNzdWU1MjAxMTg4NjI=",
    "number": 375,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375/timeline",
    "title": "grdimage does not correctly plot xarray DataArrays when they don't contain the redundant longitude at 360 E",
    "updated_at": "2020-07-16T05:49:33Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/375",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
        "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
        "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
        "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
        "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MarkWieczorek",
        "id": 8697285,
        "login": "MarkWieczorek",
        "node_id": "MDQ6VXNlcjg2OTcyODU=",
        "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
        "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
        "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MarkWieczorek"
    }
}