{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "COLLABORATOR",
    "body": "# Description\r\nIt seems like ~all~ the first 20 articles in our MariaDB have an `article_id` that stars with 4 leading zeros. However, the MD5 hash that we are using should create 32 character hashes without any clear patterns.\r\n\r\n# How do I reproduce it?\r\n```mysql\r\nselect article_id from articles limit 10;\r\n```\r\n\r\n```\r\n| article_id                       |\r\n+----------------------------------+\r\n| 000016eee4379007954c9a4d0b6aad48 |\r\n| 00002287fc54f7c95752d1d48e535135 |\r\n| 0000249eca32b76ae1bbfffabb00ec70 |\r\n| 00004237495461c7722aec94ef4dbd7b |\r\n| 000047b84edbae5e2d0041f260cc3d00 |\r\n| 0000493e64c1b5ed888274b81664f7ea |\r\n| 00004dfa6ca36cfd9e563a3b3c78f50d |\r\n| 000051cbd84e8807a148619ca6f889d4 |\r\n| 00005e10532597366222ebb33a0b2337 |\r\n| 00006dc708c409f58c0fdf939c1eb67e |\r\n+----------------------------------+\r\n```\r\n\r\n# Ideas\r\n* Double check that this is not caused by the MariaDB shell (that just simply pads the output)\r\n* I tried to reproduce the behavior with `sqlite`, however, I was not able to. Maybe it is related to `MySQL/MariaDB`\r\n* One quick way to test this is to add some logic to `tests/integration/test_bbs_database.py`",
    "closed_at": "2021-10-07T12:24:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18519371?v=4",
        "events_url": "https://api.github.com/users/jankrepl/events{/privacy}",
        "followers_url": "https://api.github.com/users/jankrepl/followers",
        "following_url": "https://api.github.com/users/jankrepl/following{/other_user}",
        "gists_url": "https://api.github.com/users/jankrepl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jankrepl",
        "id": 18519371,
        "login": "jankrepl",
        "node_id": "MDQ6VXNlcjE4NTE5Mzcx",
        "organizations_url": "https://api.github.com/users/jankrepl/orgs",
        "received_events_url": "https://api.github.com/users/jankrepl/received_events",
        "repos_url": "https://api.github.com/users/jankrepl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jankrepl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jankrepl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jankrepl"
    },
    "comments": 5,
    "comments_content": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hello @jankrepl,\r\n\r\nI had a look. The function `generate_uid` gives the same `article_uid` on my computer as on the server and in MariaDB.\r\n\r\n<details>\r\n  <summary>experiment</summary>\r\n\r\nAn example from MariaDB:\r\n\r\n```\r\n> select pubmed_id, pmc_id, doi from articles where article_id = '0000249eca32b76ae1bbfffabb00ec70';\r\n+-----------+---------+--------------------------+\r\n| pubmed_id | pmc_id  | doi                      |\r\n+-----------+---------+--------------------------+\r\n| 28761416  | 5514858 | 10.4103/1673-5374.208547 |\r\n+-----------+---------+--------------------------+\r\n```\r\n\r\nHere is how article_uid is computed at the moment:\r\n\r\nhttps://github.com/BlueBrain/Search/blob/fc823da37572a42d1c963345ddb11b389903a6d6/src/bluesearch/database/article.py#L124\r\n\r\nThe output for the example above:\r\n\r\n```python\r\n>>> generate_uid((\"28761416\", \"5514858\", \"10.4103/1673-5374.208547\"))\r\n'0000249eca32b76ae1bbfffabb00ec70'\r\n```\r\n\r\n\u27a1\ufe0f  The two article_uid are identical.\r\n\r\n</details>\r\n\r\n> I tried to reproduce the behavior with `sqlite`, however, I was not able to. Maybe it is related to `MySQL/MariaDB`\r\n\r\nSo I guess there is something else to the story. Indeed, it seems the two previous findings are in contradiction.\r\n\r\nHave you tried to reproduce the behaviour on the server or on your computer? Indeed, hardware might be involved.\r\n\r\n",
            "created_at": "2021-10-07T08:07:39Z",
            "html_url": "https://github.com/BlueBrain/Search/issues/467#issuecomment-937554644",
            "id": 937554644,
            "issue_url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
            "node_id": "IC_kwDODu5QYM434fLU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937554644/reactions"
            },
            "updated_at": "2021-10-07T08:07:39Z",
            "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937554644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4543376?v=4",
                "events_url": "https://api.github.com/users/pafonta/events{/privacy}",
                "followers_url": "https://api.github.com/users/pafonta/followers",
                "following_url": "https://api.github.com/users/pafonta/following{/other_user}",
                "gists_url": "https://api.github.com/users/pafonta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pafonta",
                "id": 4543376,
                "login": "pafonta",
                "node_id": "MDQ6VXNlcjQ1NDMzNzY=",
                "organizations_url": "https://api.github.com/users/pafonta/orgs",
                "received_events_url": "https://api.github.com/users/pafonta/received_events",
                "repos_url": "https://api.github.com/users/pafonta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pafonta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pafonta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pafonta"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Hello @jankrepl,\r\n> \r\n> I had a look. The function `generate_uid` gives the same `article_uid` on my computer as on the server and in MariaDB.\r\n> \r\n> experiment\r\n> An example from MariaDB:\r\n> \r\n> ```\r\n> > select pubmed_id, pmc_id, doi from articles where article_id = '0000249eca32b76ae1bbfffabb00ec70';\r\n> +-----------+---------+--------------------------+\r\n> | pubmed_id | pmc_id  | doi                      |\r\n> +-----------+---------+--------------------------+\r\n> | 28761416  | 5514858 | 10.4103/1673-5374.208547 |\r\n> +-----------+---------+--------------------------+\r\n> ```\r\n> \r\n> Here is how article_uid is computed at the moment:\r\n> \r\n> https://github.com/BlueBrain/Search/blob/fc823da37572a42d1c963345ddb11b389903a6d6/src/bluesearch/database/article.py#L124\r\n> \r\n> The output for the example above:\r\n> \r\n> ```python\r\n> >>> generate_uid((\"28761416\", \"5514858\", \"10.4103/1673-5374.208547\"))\r\n> '0000249eca32b76ae1bbfffabb00ec70'\r\n> ```\r\n> \r\n> \u27a1\ufe0f The two article_uid are identical.\r\n> \r\n> > I tried to reproduce the behavior with `sqlite`, however, I was not able to. Maybe it is related to `MySQL/MariaDB`\r\n> \r\n> So I guess there is something else to the story. Indeed, it seems the two previous findings are in contradiction.\r\n> \r\n> Have you tried to reproduce the behaviour on the server or on your computer? Indeed, hardware might be involved.\r\n\r\nI think my description was confusing. I am sorry. The only experiment that I have done was to run `generate_uid` with **random** `Tuple[str]` and I never saw leading zeros. As you pointed out, we are able to reproduce the `article_id` when we give it a real input (`pubmed_id`, `pmc_id`, `doi`). So we basically narrowed it down to the behavior of `generate_uid`.\r\n\r\nHowever, my question is how is it possible that when fed real inputs we seem to produce MD5 hashes that have a clear pattern? Is it something in our implementation or is this just due to the MD5 algorithm? I basically know nothing about hashing algorithms, however, I always thought that they have the following property: A tiny change in the input should lead to big changes in the output.",
            "created_at": "2021-10-07T08:41:43Z",
            "html_url": "https://github.com/BlueBrain/Search/issues/467#issuecomment-937580512",
            "id": 937580512,
            "issue_url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
            "node_id": "IC_kwDODu5QYM434lfg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937580512/reactions"
            },
            "updated_at": "2021-10-07T08:43:45Z",
            "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937580512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18519371?v=4",
                "events_url": "https://api.github.com/users/jankrepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/jankrepl/followers",
                "following_url": "https://api.github.com/users/jankrepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/jankrepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jankrepl",
                "id": 18519371,
                "login": "jankrepl",
                "node_id": "MDQ6VXNlcjE4NTE5Mzcx",
                "organizations_url": "https://api.github.com/users/jankrepl/orgs",
                "received_events_url": "https://api.github.com/users/jankrepl/received_events",
                "repos_url": "https://api.github.com/users/jankrepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jankrepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jankrepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jankrepl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe there's no problem at all: it's just that the `article_id` column is sorted and you grab the first 10. Can you try to get values from the middle/end of the table?",
            "created_at": "2021-10-07T09:06:28Z",
            "html_url": "https://github.com/BlueBrain/Search/issues/467#issuecomment-937599478",
            "id": 937599478,
            "issue_url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
            "node_id": "IC_kwDODu5QYM434qH2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937599478/reactions"
            },
            "updated_at": "2021-10-07T09:07:25Z",
            "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937599478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8017698?v=4",
                "events_url": "https://api.github.com/users/Stannislav/events{/privacy}",
                "followers_url": "https://api.github.com/users/Stannislav/followers",
                "following_url": "https://api.github.com/users/Stannislav/following{/other_user}",
                "gists_url": "https://api.github.com/users/Stannislav/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Stannislav",
                "id": 8017698,
                "login": "Stannislav",
                "node_id": "MDQ6VXNlcjgwMTc2OTg=",
                "organizations_url": "https://api.github.com/users/Stannislav/orgs",
                "received_events_url": "https://api.github.com/users/Stannislav/received_events",
                "repos_url": "https://api.github.com/users/Stannislav/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Stannislav/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Stannislav/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Stannislav"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "> Maybe there's no problem at all: it's just that the `article_id` column is sorted and you grab the first 10. Can you try to get values from the middle/end of the table?\r\n\r\n@Stannislav \r\nHaha! Thats it! Does that mean that the tables (or rather queries on these tables) are automatically sorted by their primary key?\r\n\r\nI guess my mental image of appending rows to a big table whenever we add a new entry is wrong:D.\r\n\r\n\r\nhttps://dba.stackexchange.com/questions/6051/what-is-the-default-order-of-records-for-a-select-statement-in-mysql",
            "created_at": "2021-10-07T09:54:05Z",
            "html_url": "https://github.com/BlueBrain/Search/issues/467#issuecomment-937636681",
            "id": 937636681,
            "issue_url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
            "node_id": "IC_kwDODu5QYM434zNJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937636681/reactions"
            },
            "updated_at": "2021-10-07T10:04:37Z",
            "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937636681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18519371?v=4",
                "events_url": "https://api.github.com/users/jankrepl/events{/privacy}",
                "followers_url": "https://api.github.com/users/jankrepl/followers",
                "following_url": "https://api.github.com/users/jankrepl/following{/other_user}",
                "gists_url": "https://api.github.com/users/jankrepl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jankrepl",
                "id": 18519371,
                "login": "jankrepl",
                "node_id": "MDQ6VXNlcjE4NTE5Mzcx",
                "organizations_url": "https://api.github.com/users/jankrepl/orgs",
                "received_events_url": "https://api.github.com/users/jankrepl/received_events",
                "repos_url": "https://api.github.com/users/jankrepl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jankrepl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jankrepl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jankrepl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Actually, the ordering is coming from the fact that:\r\n1. the index on the primary key is used,\r\n2. this index is a B-tree,\r\n3. a B-tree is a sorted data structure.\r\n\r\n---\r\n\r\nTo check that the index on the primary key is used:\r\n```\r\nexplain select article_id from articles limit 10;\r\n```\r\n\r\nTo check the type of the index:\r\n```\r\nshow index from articles;\r\n```\r\n",
            "created_at": "2021-10-07T13:23:41Z",
            "html_url": "https://github.com/BlueBrain/Search/issues/467#issuecomment-937789310",
            "id": 937789310,
            "issue_url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
            "node_id": "IC_kwDODu5QYM435Yd-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937789310/reactions"
            },
            "updated_at": "2021-10-07T16:25:33Z",
            "url": "https://api.github.com/repos/BlueBrain/Search/issues/comments/937789310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4543376?v=4",
                "events_url": "https://api.github.com/users/pafonta/events{/privacy}",
                "followers_url": "https://api.github.com/users/pafonta/followers",
                "following_url": "https://api.github.com/users/pafonta/following{/other_user}",
                "gists_url": "https://api.github.com/users/pafonta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pafonta",
                "id": 4543376,
                "login": "pafonta",
                "node_id": "MDQ6VXNlcjQ1NDMzNzY=",
                "organizations_url": "https://api.github.com/users/pafonta/orgs",
                "received_events_url": "https://api.github.com/users/pafonta/received_events",
                "repos_url": "https://api.github.com/users/pafonta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pafonta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pafonta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pafonta"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/BlueBrain/Search/issues/467/comments",
    "created_at": "2021-10-06T14:57:15Z",
    "events_url": "https://api.github.com/repos/BlueBrain/Search/issues/467/events",
    "html_url": "https://github.com/BlueBrain/Search/issues/467",
    "id": 1018506086,
    "labels": [
        {
            "color": "d73a4a",
            "default": false,
            "description": "Something isn't working",
            "id": 1938483675,
            "name": "\ud83d\udc1b bug fix",
            "node_id": "MDU6TGFiZWwxOTM4NDgzNjc1",
            "url": "https://api.github.com/repos/BlueBrain/Search/labels/%F0%9F%90%9B%20bug%20fix"
        }
    ],
    "labels_url": "https://api.github.com/repos/BlueBrain/Search/issues/467/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODu5QYM48tStm",
    "number": 467,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/BlueBrain/Search/issues/467/reactions"
    },
    "repository_url": "https://api.github.com/repos/BlueBrain/Search",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/BlueBrain/Search/issues/467/timeline",
    "title": "`article_id` starts with 4 leading zeros",
    "updated_at": "2021-10-07T16:25:33Z",
    "url": "https://api.github.com/repos/BlueBrain/Search/issues/467",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/18519371?v=4",
        "events_url": "https://api.github.com/users/jankrepl/events{/privacy}",
        "followers_url": "https://api.github.com/users/jankrepl/followers",
        "following_url": "https://api.github.com/users/jankrepl/following{/other_user}",
        "gists_url": "https://api.github.com/users/jankrepl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jankrepl",
        "id": 18519371,
        "login": "jankrepl",
        "node_id": "MDQ6VXNlcjE4NTE5Mzcx",
        "organizations_url": "https://api.github.com/users/jankrepl/orgs",
        "received_events_url": "https://api.github.com/users/jankrepl/received_events",
        "repos_url": "https://api.github.com/users/jankrepl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jankrepl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jankrepl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jankrepl"
    }
}