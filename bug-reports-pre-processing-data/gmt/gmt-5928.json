{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "\r\n\r\n```\r\njulia> G = gmtread(\"HLS.S30.T10TEK.2021089T184941.v1.5_EVI.grd\")\r\njulia> G.proj4\r\n\"\"\r\njulia> G.wkt\r\n\"\"\r\n```\r\n\r\n```\r\ngdalinfo HLS.S30.T10TEK.2021089T184941.v1.5_EVI.grd\r\n...\r\ntransverse_mercator#spatial_ref=PROJCS[\"unknown\",GEOGCS[...\r\n...\r\n```\r\n\r\nAs an example of one that works\r\n```\r\ngdalinfo evi.grd\r\n...\r\nMetadata:\r\n  grid_mapping#spatial_ref=PROJCS[\"unknown\",\r\n```\r\n\r\n[HLS.S30.T10TEK.2021089T184941.v1.5_EVI.zip](https://github.com/GenericMappingTools/gmt/files/7437758/HLS.S30.T10TEK.2021089T184941.v1.5_EVI.zip)\r\n\r\n",
    "closed_at": "2021-11-05T02:42:28Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
        "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
        "followers_url": "https://api.github.com/users/PaulWessel/followers",
        "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
        "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/PaulWessel",
        "id": 26473567,
        "login": "PaulWessel",
        "node_id": "MDQ6VXNlcjI2NDczNTY3",
        "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
        "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
        "repos_url": "https://api.github.com/users/PaulWessel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/PaulWessel"
    },
    "comments": 3,
    "comments_content": [
        {
            "author_association": "MEMBER",
            "body": "Seems this file has a single character variable called transverse_mercator, and that variable then has a bunch of attributes, including this one:\r\n\r\n`transverse_mercator:spatial_ref = \"PROJCS[\\\"unknown\\\",GEOGCS[\\\"unknown\\\",DATUM[\\\"Unknown based on WGS84 ellipsoid\\\",SPHEROID[\\\"WGS 84\\\",6378137,298.257223563]],PRIMEM[\\\"Greenwich\\\",0],UNIT[\\\"degree\\\",0.0174532925199433]],PROJECTION[\\\"Transverse_Mercator\\\"],PARAMETER[\\\"latitude_of_origin\\\",0],PARAMETER[\\\"central_meridian\\\",-123],PARAMETER[\\\"scale_factor\\\",0.9996],PARAMETER[\\\"false_easting\\\",500000],PARAMETER[\\\"false_northing\\\",0],UNIT[\\\"metre\\\",1],AXIS[\\\"Easting\\\",EAST],AXIS[\\\"Northing\\\",NORTH]]\" ;`\r\n\r\nSo what are we to do? Loop over all variables in the netCDF file and see if each one might have a spatial_ref attribute?  IS this really CF conformant?  We certainly cannot guess the name of the variable (here transverse_mercator) but I guess it would be possible to search for all attributes per variable, but is this really a sane way to flag a grid as projected?\r\n",
            "created_at": "2021-10-31T21:59:28Z",
            "html_url": "https://github.com/GenericMappingTools/gmt/issues/5928#issuecomment-955798715",
            "id": 955798715,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928",
            "node_id": "IC_kwDOCJzWHc44-FS7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955798715/reactions"
            },
            "updated_at": "2021-10-31T21:59:28Z",
            "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955798715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I asked about it in the GDAL list, this was the response\r\n\r\n > The CreateCopy() solution created me a file with the coordinates system info stored in the \u201ctransverse_mercator\u201d attribute (why?)\r\n\r\n>> why not ? :-) This is like this before I was born.\r\nIf you look at \"Example 5.6. Rotated pole grid\" of https://cfconventions.org/Data/cf-conventions/cf-conventions-1.9/cf-conventions.html, you can see that the name of the variable that stores the CRS definition can be anything. The link to it is done through the \"grid_mapping\" attribute of the variable of interest.\r\n  \r\n\r\n \r\n> How can I control the name of the attribute where the CRS is stored so I can find it from other programs?\r\n\r\n>> You can't. It is set at https://github.com/OSGeo/gdal/blob/40d18b06d78d5b97f9c6387ef6a08a9c0142c884/gdal/frmts/netcdf/netcdfdataset.cpp#L5607 with the same value as the #grid_mapping_name attribute of the CRS definition variable.\r\n\r\n \r\nSo the solution seems to be -> find an attribute #grid_mapping in the 2D variable. That attribute is the name of of gobal attribute that in turn has a ``spatial_ref`` attribute, whose value is the CRS.",
            "created_at": "2021-10-31T22:59:06Z",
            "html_url": "https://github.com/GenericMappingTools/gmt/issues/5928#issuecomment-955806927",
            "id": 955806927,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928",
            "node_id": "IC_kwDOCJzWHc44-HTP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955806927/reactions"
            },
            "updated_at": "2021-10-31T23:04:36Z",
            "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955806927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/537321?v=4",
                "events_url": "https://api.github.com/users/joa-quim/events{/privacy}",
                "followers_url": "https://api.github.com/users/joa-quim/followers",
                "following_url": "https://api.github.com/users/joa-quim/following{/other_user}",
                "gists_url": "https://api.github.com/users/joa-quim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/joa-quim",
                "id": 537321,
                "login": "joa-quim",
                "node_id": "MDQ6VXNlcjUzNzMyMQ==",
                "organizations_url": "https://api.github.com/users/joa-quim/orgs",
                "received_events_url": "https://api.github.com/users/joa-quim/received_events",
                "repos_url": "https://api.github.com/users/joa-quim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/joa-quim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/joa-quim/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/joa-quim"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I suppose smart people can make dumb decisions.  I have done my share.",
            "created_at": "2021-10-31T23:02:39Z",
            "html_url": "https://github.com/GenericMappingTools/gmt/issues/5928#issuecomment-955807451",
            "id": 955807451,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928",
            "node_id": "IC_kwDOCJzWHc44-Hbb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955807451/reactions"
            },
            "updated_at": "2021-10-31T23:02:39Z",
            "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/comments/955807451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928/comments",
    "created_at": "2021-10-28T22:53:56Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928/events",
    "html_url": "https://github.com/GenericMappingTools/gmt/issues/5928",
    "id": 1039015551,
    "labels": [
        {
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working",
            "id": 1022239695,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxMDIyMjM5Njk1",
            "url": "https://api.github.com/repos/GenericMappingTools/gmt/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOCJzWHc497h5_",
    "number": 5928,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/gmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928/timeline",
    "title": "GMT can't fetch referencing system when the \"spatial_ref\" is an attribute of other than the global \"grid_mapping\"",
    "updated_at": "2021-11-05T02:42:28Z",
    "url": "https://api.github.com/repos/GenericMappingTools/gmt/issues/5928",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/537321?v=4",
        "events_url": "https://api.github.com/users/joa-quim/events{/privacy}",
        "followers_url": "https://api.github.com/users/joa-quim/followers",
        "following_url": "https://api.github.com/users/joa-quim/following{/other_user}",
        "gists_url": "https://api.github.com/users/joa-quim/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/joa-quim",
        "id": 537321,
        "login": "joa-quim",
        "node_id": "MDQ6VXNlcjUzNzMyMQ==",
        "organizations_url": "https://api.github.com/users/joa-quim/orgs",
        "received_events_url": "https://api.github.com/users/joa-quim/received_events",
        "repos_url": "https://api.github.com/users/joa-quim/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/joa-quim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joa-quim/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/joa-quim"
    }
}