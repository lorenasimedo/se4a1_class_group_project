{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "**Description of the problem**\r\n\r\ngrdtrack works well for netCDF file, but produces random results for xarray.DataArray grid. If I understand #1304 correctly, it works on Linux, but not on macOS and Windows. I believe it's an upstream GMT bug.\r\n\r\n**Full code that generated the error**\r\n\r\n```python\r\nfrom pygmt import grdtrack, grdcut\r\nfrom pygmt.datasets import load_earth_relief\r\n\r\n# load the earth_relief_01d_g file\r\ngrid = load_earth_relief(registration=\"gridline\")\r\n\r\n# prepare a subgrid in xarray.DataArray\r\ndataarray = grid.sel(lat=slice(-49, -42), lon=slice(-118, -107))\r\n# prepare a subgrid in netcdf\r\ngrdcut(grid, region=[-118, -107, -49, -42], outgrid=\"earth_subset.nc\")\r\n\r\n# run grdtrack on the netCDF file\r\noutput = grdtrack(points=\"@ridge.txt\", grid=\"earth_subset.nc\", newcolname=\"bathymetry\")\r\nprint(output)\r\n\r\n# run grdtrack on the xarray.DataArray\r\noutput = grdtrack(points=\"@ridge.txt\", grid=dataarray, newcolname=\"bathymetry\")\r\nprint(output)\r\n```\r\n\r\n**Full output**\r\n\r\nThe first output is correct, and the second output is wrong.\r\n```\r\ngrdtrack [WARNING]: Some input points were outside the grid domain(s).\r\n          0        1            2\r\n0 -110.9536 -42.2489 -2797.394987\r\n1 -111.3500 -42.2033 -2715.359945\r\n2 -111.7309 -43.1706 -2711.704748\r\n3 -112.2196 -44.3819 -2787.948153\r\n4 -112.5505 -45.4878 -2746.303734\r\n5 -112.6736 -45.8347 -2685.852247\r\n6 -112.4235 -45.8561 -2785.099618\r\n7 -112.9507 -47.2270 -2672.932596\r\n8 -113.3124 -48.3208 -2706.345811\r\ngrdtrack [WARNING]: Some input points were outside the grid domain(s).\r\n          0        1             2\r\n0 -110.9536 -42.2489 -2.974656e+03\r\n1 -111.3500 -42.2033 -2.859961e+03\r\n2 -111.7309 -43.1706 -2.711705e+03\r\n3 -112.2196 -44.3819 -2.787948e+03\r\n4 -112.5505 -45.4878 -2.746304e+03\r\n5 -112.6736 -45.8347 -2.685852e+03\r\n6 -112.4235 -45.8561 -2.785100e+03\r\n7 -112.9507 -47.2270 -2.672933e+03\r\n8 -113.3124 -48.3208  1.123369e+28\r\n```\r\n\r\n**System information**\r\n\r\nPlease paste the output of `python -c \"import pygmt; pygmt.show_versions()\"`:\r\n\r\n```\r\nPyGMT information:\r\n  version: v0.3.2.dev168+ga8472925\r\nSystem information:\r\n  python: 3.9.2 | packaged by conda-forge | (default, Feb 21 2021, 05:02:20)  [Clang 11.0.1 ]\r\n  executable: /Users/seisman/.miniconda/envs/pygmt/bin/python\r\n  machine: macOS-11.2.3-x86_64-i386-64bit\r\nDependency information:\r\n  numpy: 1.20.1\r\n  pandas: 1.2.3\r\n  xarray: 0.18.0\r\n  netCDF4: 1.5.6\r\n  packaging: 20.9\r\n  ghostscript: 9.54.0\r\n  gmt: 6.2.0_922af84_2021.03.17\r\nGMT library information:\r\n  binary dir: /Users/seisman/.miniconda/envs/pygmt/bin\r\n  cores: 8\r\n  grid layout: rows\r\n  library path: /Users/seisman/opt/GMT-master/lib/libgmt.dylib\r\n  padding: 2\r\n  plugin dir: /Users/seisman/opt/GMT-master/lib/gmt/plugins\r\n  share dir: /Users/seisman/opt/GMT-master/share\r\n  version: 6.2.0\r\n```\r\n\r\n@meghanrjones @PaulWessel Please see if you can debug it.",
    "closed_at": "2021-11-05T22:50:51Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    },
    "comments": 10,
    "comments_content": [
        {
            "author_association": "MEMBER",
            "body": "I get the first output but on the 2nd one I get a crash:\r\n\r\n```\r\n>>> output = grdtrack(points=\"@ridge.txt\", grid=dataarray, newcolname=\"bathymetry\")\r\nAssertion failed: (node < G->header->size), function gmt_bcr_get_z_fast, file /Users/pwessel/GMTdev/gmt-dev/src/gmt_bcr.c, line 256.\r\nAbort trap: 6\r\n```\r\n\r\nKey problem is that **grdtrack** assumes bicubic sampling which requires padding and your matrix has none.  The other place this is an issue is in **grdimage** and there we create a padded grid if resampling is needed.  Not sure if we should do the same here, but if we don't then you will never get to use bicubic.  The alternative is to drop to bilinear and then no pads are needed.  Perhaps the right thing to do is to see if **-n** is set of defaults to anything but bilinear and you have no pad then we must create that padded grid.",
            "created_at": "2021-05-31T02:25:55Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851123481",
            "id": 851123481,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEyMzQ4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851123481/reactions"
            },
            "updated_at": "2021-05-31T02:25:55Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851123481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also wonder if the more general solution to these are to possibly add a flag to the mode passed to GMT_Read_Data that means \"this grid needs to have 2 boundary pads and if not then make it so\".  This flag would not do much for the case of reading from a data file, but in the case of a read-only input matrix with no pad it would basically allocate the grid, copy in the matrix, and from there on out we are working with the GMT-allocated grid.  So, this flag would be set based on need, as follows:\r\n\r\n1. grdgrack: If -n implies the need for 2 rows/cols, pass GMT_GRID_NEEDS_PAD else not.\r\n2. grdimage: If `\tneed_to_project = (gmt_M_is_nonlinear_graticule (GMT) || Ctrl->E.dpi > 0);` is true then pass GMT_GRID_NEEDS_PAD in any GMT_Read_Data calls, else not.\r\n\r\nI think this is the best solution rather than adding ad-hoc stuff like currently done in _gmt_grd_project_ and what would be needed in **grdtrack**, etc.  However, this may not be a super-quick fix, so perhaps in the interest of 6.2.0 we could temporarily impose **-nl** if no pad on the incoming grid? If so, should this be done in PyGMT?",
            "created_at": "2021-05-31T02:41:56Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851127682",
            "id": 851127682,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEyNzY4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851127682/reactions"
            },
            "updated_at": "2021-05-31T02:41:56Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851127682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If you have a way of passing -nl to grdtrack in pygmt then see if the script runs as is.",
            "created_at": "2021-05-31T02:42:41Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851127880",
            "id": 851127880,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEyNzg4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851127880/reactions"
            },
            "updated_at": "2021-05-31T02:42:41Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851127880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, adding `n=\"l\"` gives the same results for the two grdtrack calls.\r\n\r\n> I also wonder if the more general solution to these are to possibly add a flag to the mode passed to GMT_Read_Data that means \"this grid needs to have 2 boundary pads and if not then make it so\".\r\n\r\nDoes it means that wrappers like PyGMT must know the technical details to decide if `GMT_GRID_NEEDS_PADS` is necessary?\r\n",
            "created_at": "2021-05-31T02:51:22Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851130426",
            "id": 851130426,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEzMDQyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851130426/reactions"
            },
            "updated_at": "2021-05-31T02:51:22Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851130426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, only the C modules need to know what they need, so easy for the wrappers: No changes (after implementing the GMT_GRID_NEEDS_PADS).  I think @joa-quim may agree that this is a good enhancement.  So in that case the GMT_GRID_NEEDS_PADS is not an API addition but just another internal developer constant.",
            "created_at": "2021-05-31T02:53:07Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851130881",
            "id": 851130881,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEzMDg4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851130881/reactions"
            },
            "updated_at": "2021-05-31T02:53:07Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851130881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No, only the C modules need to know what they need, so easy for the wrappers: No changes (after implementing the GMT_GRID_NEEDS_PADS).\r\n\r\nIt sounds good. ",
            "created_at": "2021-05-31T02:59:58Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851132640",
            "id": 851132640,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEzMjY0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851132640/reactions"
            },
            "updated_at": "2021-05-31T02:59:58Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851132640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So I think until then the simple thing is to check in grdtrack that if pad is < 2 then we set the -n interpolant to bilinear.",
            "created_at": "2021-05-31T03:09:47Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851135697",
            "id": 851135697,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTEzNTY5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851135697/reactions"
            },
            "updated_at": "2021-05-31T03:09:47Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851135697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26473567?v=4",
                "events_url": "https://api.github.com/users/PaulWessel/events{/privacy}",
                "followers_url": "https://api.github.com/users/PaulWessel/followers",
                "following_url": "https://api.github.com/users/PaulWessel/following{/other_user}",
                "gists_url": "https://api.github.com/users/PaulWessel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PaulWessel",
                "id": 26473567,
                "login": "PaulWessel",
                "node_id": "MDQ6VXNlcjI2NDczNTY3",
                "organizations_url": "https://api.github.com/users/PaulWessel/orgs",
                "received_events_url": "https://api.github.com/users/PaulWessel/received_events",
                "repos_url": "https://api.github.com/users/PaulWessel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PaulWessel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PaulWessel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PaulWessel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FYI, the issue has been temporarily fixed in https://github.com/GenericMappingTools/gmt/pull/5283 and should be available in GMT 6.2.0.",
            "created_at": "2021-05-31T14:12:20Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851518263",
            "id": 851518263,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTUxODI2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851518263/reactions"
            },
            "updated_at": "2021-05-31T14:12:20Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/851518263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FYI, the better solution mentioned in https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-851127682 has been implemented in https://github.com/GenericMappingTools/gmt/pull/5893 and will be available in GMT 6.3.0. The temporary fix in https://github.com/GenericMappingTools/gmt/pull/5283 is reverted in https://github.com/GenericMappingTools/gmt/pull/5911.",
            "created_at": "2021-10-28T02:27:20Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-953449031",
            "id": 953449031,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "IC_kwDOBRZfO8441HpH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/953449031/reactions"
            },
            "updated_at": "2021-10-28T02:27:20Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/953449031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, I'll reopen this issue since we'll need to fix the breaking tests since the `grdtrack` values have changed. See https://github.com/GenericMappingTools/pygmt/runs/4028911441?check_suite_focus=true#step:15:566.\r\n\r\n```python-traceback\r\n=================================== FAILURES ===================================\r\n_________________ test_grdtrack_input_dataframe_and_dataarray __________________\r\n\r\ndataarray = <xarray.DataArray 'elevation' (lat: 8, lon: 12)>\r\narray([[-3385. , -3201.5, -3104. , -2953. , -2754. , -2782. , -2957.5...elevation relative to the geoid\r\n    units:             meters\r\n    vertical_datum:    EMG96\r\n    horizontal_datum:  WGS84\r\ndataframe =       longitude  latitude\r\n0      -32.2971   37.4118\r\n1      -32.3909   37.1394\r\n2      -32.6448   37.1760\r\n3      -32.706...6.6762  -45.6414\r\n4143   -75.8527  -45.5741\r\n4144   -75.7026  -46.0728\r\n4145   -75.5410  -46.5777\r\n\r\n[4146 rows x 2 columns]\r\n\r\n    def test_grdtrack_input_dataframe_and_dataarray(dataarray, dataframe):\r\n        \"\"\"\r\n        Run grdtrack by passing in a pandas.DataFrame and xarray.DataArray as\r\n        inputs.\r\n        \"\"\"\r\n        output = grdtrack(points=dataframe, grid=dataarray, newcolname=\"bathymetry\")\r\n        assert isinstance(output, pd.DataFrame)\r\n        assert output.columns.to_list() == [\"longitude\", \"latitude\", \"bathymetry\"]\r\n>       npt.assert_allclose(output.iloc[0], [-110.9536, -42.2489, -2790.488422])\r\nE       AssertionError: \r\nE       Not equal to tolerance rtol=1e-07, atol=0\r\nE       \r\nE       Mismatched elements: 1 / 3 (33.3%)\r\nE       Max absolute difference: 6.90656549\r\nE       Max relative difference: 0.00247504\r\nE        x: array([ -110.9536  ,   -42.2489  , -2797.394987])\r\nE        y: array([ -110.9536  ,   -42.2489  , -2790.488422])\r\n\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.9/site-packages/pygmt/tests/test_grdtrack.py:60: AssertionError\r\n----------------------------- Captured stderr call -----------------------------\r\nWarning: [WARNING]: Some input points were outside the grid domain(s).\r\n__________________ test_grdtrack_input_csvfile_and_dataarray ___________________\r\n\r\ndataarray = <xarray.DataArray 'elevation' (lat: 8, lon: 12)>\r\narray([[-3385. , -3201.5, -3104. , -2953. , -2754. , -2782. , -2957.5...elevation relative to the geoid\r\n    units:             meters\r\n    vertical_datum:    EMG96\r\n    horizontal_datum:  WGS84\r\ncsvfile = '/home/runner/.gmt/cache/ridge.txt'\r\n\r\n    def test_grdtrack_input_csvfile_and_dataarray(dataarray, csvfile):\r\n        \"\"\"\r\n        Run grdtrack by passing in a csvfile and xarray.DataArray as inputs.\r\n        \"\"\"\r\n        try:\r\n            output = grdtrack(points=csvfile, grid=dataarray, outfile=TEMP_TRACK)\r\n            assert output is None  # check that output is None since outfile is set\r\n            assert os.path.exists(path=TEMP_TRACK)  # check that outfile exists at path\r\n    \r\n            track = pd.read_csv(TEMP_TRACK, sep=\"\\t\", header=None, comment=\">\")\r\n>           npt.assert_allclose(track.iloc[0], [-110.9536, -42.2489, -2790.488422])\r\nE           AssertionError: \r\nE           Not equal to tolerance rtol=1e-07, atol=0\r\nE           \r\nE           Mismatched elements: 1 / 3 (33.3%)\r\nE           Max absolute difference: 6.90656549\r\nE           Max relative difference: 0.00247504\r\nE            x: array([ -110.9536  ,   -42.2489  , -2797.394987])\r\nE            y: array([ -110.9536  ,   -42.2489  , -2790.488422])\r\n\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.9/site-packages/pygmt/tests/test_grdtrack.py:75: AssertionError\r\n```",
            "created_at": "2021-10-28T02:38:43Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309#issuecomment-953452875",
            "id": 953452875,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
            "node_id": "IC_kwDOBRZfO8441IlL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/953452875/reactions"
            },
            "updated_at": "2021-10-28T02:38:43Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/953452875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309/comments",
    "created_at": "2021-05-28T21:44:25Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1309",
    "id": 906105614,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        },
        {
            "color": "e8ff6b",
            "default": false,
            "description": "Bug or missing feature of upstream core GMT",
            "id": 2059525605,
            "name": "upstream",
            "node_id": "MDU6TGFiZWwyMDU5NTI1NjA1",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/upstream"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2022-03-15T23:17:52Z",
        "closed_issues": 174,
        "created_at": "2021-06-23T03:22:20Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
            "events_url": "https://api.github.com/users/seisman/events{/privacy}",
            "followers_url": "https://api.github.com/users/seisman/followers",
            "following_url": "https://api.github.com/users/seisman/following{/other_user}",
            "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seisman",
            "id": 3974108,
            "login": "seisman",
            "node_id": "MDQ6VXNlcjM5NzQxMDg=",
            "organizations_url": "https://api.github.com/users/seisman/orgs",
            "received_events_url": "https://api.github.com/users/seisman/received_events",
            "repos_url": "https://api.github.com/users/seisman/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seisman"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/9",
        "id": 6880166,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lNjg4MDE2Ng==",
        "number": 9,
        "open_issues": 0,
        "state": "closed",
        "title": "0.6.0",
        "updated_at": "2022-03-15T23:17:52Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/9"
    },
    "node_id": "MDU6SXNzdWU5MDYxMDU2MTQ=",
    "number": 1309,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309/timeline",
    "title": "grdtrack produces incorrect results for xarray.DataArray grid",
    "updated_at": "2021-11-05T22:50:51Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1309",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
        "events_url": "https://api.github.com/users/seisman/events{/privacy}",
        "followers_url": "https://api.github.com/users/seisman/followers",
        "following_url": "https://api.github.com/users/seisman/following{/other_user}",
        "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seisman",
        "id": 3974108,
        "login": "seisman",
        "node_id": "MDQ6VXNlcjM5NzQxMDg=",
        "organizations_url": "https://api.github.com/users/seisman/orgs",
        "received_events_url": "https://api.github.com/users/seisman/received_events",
        "repos_url": "https://api.github.com/users/seisman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seisman"
    }
}