{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "**Description of the problem**\r\n\r\n<!-- Please be as detailed as you can when describing an issue. The more information we have, the easier it will be for us to track this down. -->\r\n\r\nI am just getting started with pygmt and ran through the first [example](https://www.pygmt.org/latest/tutorials/first_figure.html#creating-figures) in the docs. \r\n\r\nI wanted to play a bit with the example and tried to deactivate the frame\r\n\r\n**Full code that generated the error**\r\nWhen I modify\r\n```python\r\nfig.basemap(region=[-90, -70, 0, 20], projection=\"M15c\", frame=True)\r\n```\r\nto\r\n\r\n```python\r\nfig.basemap(region=[-90, -70, 0, 20], projection=\"M15c\", frame=None)\r\n```\r\nI get this rather cryptic error\r\n\r\n**Full error message**\r\n\r\n```\r\nbasemap [ERROR]: Must specify at least one of -A, -B, -D, -L, -T\r\n---------------------------------------------------------------------------\r\nGMTCLibError                              Traceback (most recent call last)\r\n/tmp/ipykernel_493/1135014409.py in <module>\r\n----> 1 fig.basemap(region=[-90, -70, 0, 20], projection=\"M15c\", frame=None)\r\n\r\n/srv/conda/envs/notebook/lib/python3.8/site-packages/pygmt/helpers/decorators.py in new_module(*args, **kwargs)\r\n    584                     )\r\n    585                     warnings.warn(msg, category=SyntaxWarning, stacklevel=2)\r\n--> 586             return module_func(*args, **kwargs)\r\n    587 \r\n    588         new_module.aliases = aliases\r\n\r\n/srv/conda/envs/notebook/lib/python3.8/site-packages/pygmt/helpers/decorators.py in new_module(*args, **kwargs)\r\n    724                         kwargs[arg] = separators[fmt].join(f\"{item}\" for item in value)\r\n    725             # Execute the original function and return its output\r\n--> 726             return module_func(*args, **kwargs)\r\n    727 \r\n    728         return new_module\r\n\r\n/srv/conda/envs/notebook/lib/python3.8/site-packages/pygmt/src/basemap.py in basemap(self, **kwargs)\r\n     82         )\r\n     83     with Session() as lib:\r\n---> 84         lib.call_module(\"basemap\", build_arg_string(kwargs))\r\n\r\n/srv/conda/envs/notebook/lib/python3.8/site-packages/pygmt/clib/session.py in call_module(self, module, args)\r\n    498         )\r\n    499         if status != 0:\r\n--> 500             raise GMTCLibError(\r\n    501                 f\"Module '{module}' failed with status code {status}:\\n{self._error_message}\"\r\n    502             )\r\n\r\nGMTCLibError: Module 'basemap' failed with status code 72:\r\nbasemap [ERROR]: Must specify at least one of -A, -B, -D, -L, -T\r\n```\r\n\r\nSince `None` is the default for the `frame` kwarg I am a bit confused here. Is `frame=True` always required?\r\n\r\n**System information**\r\n\r\nPlease paste the output of `python -c \"import pygmt; pygmt.show_versions()\"`:\r\n\r\n```\r\nPyGMT information:\r\n  version: v0.5.0\r\nSystem information:\r\n  python: 3.8.12 | packaged by conda-forge | (default, Sep 29 2021, 19:52:28)  [GCC 9.4.0]\r\n  executable: /srv/conda/envs/notebook/bin/python\r\n  machine: Linux-5.4.120+-x86_64-with-glibc2.10\r\nDependency information:\r\n  numpy: 1.21.2\r\n  pandas: 1.3.3\r\n  xarray: 0.19.0\r\n  netCDF4: 1.5.7\r\n  packaging: 21.0\r\n  ghostscript: 9.54.0\r\n  gmt: 6.2.0\r\nGMT library information:\r\n  binary dir: /srv/conda/envs/notebook/bin\r\n  cores: 4\r\n  grid layout: rows\r\n  library path: /srv/conda/envs/notebook/lib/libgmt.so\r\n  padding: 2\r\n  plugin dir: /srv/conda/envs/notebook/lib/gmt/plugins\r\n  share dir: /srv/conda/envs/notebook/share/gmt\r\n  version: 6.2.0\r\n```\r\n",
    "closed_at": "2022-04-30T05:07:57Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
        "events_url": "https://api.github.com/users/seisman/events{/privacy}",
        "followers_url": "https://api.github.com/users/seisman/followers",
        "following_url": "https://api.github.com/users/seisman/following{/other_user}",
        "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seisman",
        "id": 3974108,
        "login": "seisman",
        "node_id": "MDQ6VXNlcjM5NzQxMDg=",
        "organizations_url": "https://api.github.com/users/seisman/orgs",
        "received_events_url": "https://api.github.com/users/seisman/received_events",
        "repos_url": "https://api.github.com/users/seisman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seisman"
    },
    "comments": 18,
    "comments_content": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah I just saw this: `At least one of the parameters frame, map_scale, rose or compass must be specified.` [here](https://www.pygmt.org/latest/api/generated/pygmt.Figure.basemap.html#pygmt-figure-basemap).\r\n\r\nI find this signature very confusing. Is there a way to provide a reasonable default (like `frame=True`), so that a call to `fig.basemap()` does not raise an error? I might also misunderstand something here.",
            "created_at": "2021-12-14T14:22:22Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-993591243",
            "id": 993591243,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO847OP_L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/993591243/reactions"
            },
            "updated_at": "2021-12-14T14:22:22Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/993591243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14314623?v=4",
                "events_url": "https://api.github.com/users/jbusecke/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbusecke/followers",
                "following_url": "https://api.github.com/users/jbusecke/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbusecke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbusecke",
                "id": 14314623,
                "login": "jbusecke",
                "node_id": "MDQ6VXNlcjE0MzE0NjIz",
                "organizations_url": "https://api.github.com/users/jbusecke/orgs",
                "received_events_url": "https://api.github.com/users/jbusecke/received_events",
                "repos_url": "https://api.github.com/users/jbusecke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbusecke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbusecke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbusecke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@willschlitzer, do you want to have a think about the `frame` parameter here since you're working on revamping the first tutorial at #1607?",
            "created_at": "2021-12-14T20:56:33Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-993996729",
            "id": 993996729,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO847Py-5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/993996729/reactions"
            },
            "updated_at": "2021-12-14T20:56:33Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/993996729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @willschlitzer, do you want to have a think about the `frame` parameter here since you're working on revamping the first tutorial at #1607?\r\n\r\nI like the idea of setting `frame=True` as the default for `basemap`, as I think that is much more likely to be plotted than `map_scale`, `rose`, or `compass` when plotting `basemap`.\r\n\r\nAdmittedly, I also think `basemap` should be rarely used when creating plots, as frames and titles can also be set in functions like `coast`, `plot`, `grdimage`, and the like. I chose not to include it on the new `first_figure.py` because I think it adds extra complexity when an adequate map can be created using only `coast`.",
            "created_at": "2021-12-20T13:42:22Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-997935322",
            "id": 997935322,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO847e0ja",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/997935322/reactions"
            },
            "updated_at": "2021-12-20T13:42:22Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/997935322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29518865?v=4",
                "events_url": "https://api.github.com/users/willschlitzer/events{/privacy}",
                "followers_url": "https://api.github.com/users/willschlitzer/followers",
                "following_url": "https://api.github.com/users/willschlitzer/following{/other_user}",
                "gists_url": "https://api.github.com/users/willschlitzer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/willschlitzer",
                "id": 29518865,
                "login": "willschlitzer",
                "node_id": "MDQ6VXNlcjI5NTE4ODY1",
                "organizations_url": "https://api.github.com/users/willschlitzer/orgs",
                "received_events_url": "https://api.github.com/users/willschlitzer/received_events",
                "repos_url": "https://api.github.com/users/willschlitzer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/willschlitzer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/willschlitzer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/willschlitzer"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this issue actually contains a bug report and a feature request.\r\n\r\n### Bug report\r\n\r\nIn the current implementation, running the following code\r\n```\r\nfig.basemap(region=[-90, -70, 0, 20], projection=\"M15c\")\r\n```\r\nraises an exception `At least one of frame, map_scale, compass, rose, or panel must be specified.`\r\n\r\nBecause the default value of `frame` is `None`, the following code should raise the same exception.\r\n```\r\nfig.basemap(region=[-90, -70, 0, 20], projection=\"M15c\", frame=None)\r\n```\r\nHowever, as reported in this issue, the above code doesn't raise the exception. Instead, GMT reports an error `basemap [ERROR]: Must specify at least one of -A, -B, -D, -L, -T`, which make little sense to PyGMT users.\r\n\r\nThe problem is that when `frame=None` is passed, the `use_alias` decorator converts it to `kwargs[\"B\"]=None`, so the following if-test is `False` and the exception is not raised:\r\nhttps://github.com/GenericMappingTools/pygmt/blob/418640059915d76f412c2366121aee5e5625e603/pygmt/src/basemap.py#L79-L82\r\n\r\nThis is a general issue for all aliased options and should be fixed.\r\n\r\n### feature request\r\n\r\nAs discussed in above comments, when none of -A, -B, -D, -L, -T is passed, it makes sense to set `frame=True`, rather than raising an exception.\r\n",
            "created_at": "2022-03-11T04:57:29Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1064772922",
            "id": 1064772922,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO84_dyU6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1064772922/reactions"
            },
            "updated_at": "2022-03-11T04:57:29Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1064772922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually, is this a side effect of #1125?",
            "created_at": "2022-03-13T16:51:06Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1066140062",
            "id": 1066140062,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO84_jAGe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1066140062/reactions"
            },
            "updated_at": "2022-03-13T16:51:06Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1066140062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is a general issue for all aliased options and should be fixed.\r\n\r\nI may have got a generic solution for the bug fix in #1815 by modifying the `args_in_kwargs` function, but needs a bit more testing and handling of edge cases.\r\n\r\n> ### feature request\r\n> \r\n> As discussed in above comments, when none of -A, -B, -D, -L, -T is passed, it makes sense to set `frame=True`, rather than raising an exception.\r\n\r\nThis would need to be handled in a separate Pull Request. I suppose we could modify these lines, so that `kwargs[\"B\"]` is set to `True` if no arguments are passed to A/B/D/L/T.\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/blob/418640059915d76f412c2366121aee5e5625e603/pygmt/src/basemap.py#L79-L82",
            "created_at": "2022-03-14T01:52:22Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1066257242",
            "id": 1066257242,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO84_jcta",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1066257242/reactions"
            },
            "updated_at": "2022-03-14T01:52:22Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1066257242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Actually, is this a side effect of #1125?\r\n\r\nYes, it's related to #1125, but it isn't a side effect of #1125. As I understand the code, the behavior of `frame=None` should not change before or after #1125.\r\n\r\n\r\n\r\n> I may have got a generic solution for the bug fix in #1815 by modifying the `args_in_kwargs` function, but needs a bit more testing and handling of edge cases.\r\n> \r\n\r\nI don't think your solution in #1815 is general, because sometimes we don't use `args_in_kwagrs`, instead, we simply check `if \"B\" in kwargs` or similar.\r\n\r\nI think a more general solution is dealing with `frame=None` (i.e. removing `kwargs[\"B\"]` if it's None) in the `@use_alias` decorator.",
            "created_at": "2022-03-17T02:06:45Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1069847030",
            "id": 1069847030,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO84_xJH2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1069847030/reactions"
            },
            "updated_at": "2022-03-17T02:06:45Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1069847030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \r\n> > I may have got a generic solution for the bug fix in #1815 by modifying the `args_in_kwargs` function, but needs a bit more testing and handling of edge cases.\r\n> \r\n> I don't think your solution in #1815 is general, because sometimes we don't use `args_in_kwagrs`, instead, we simply check `if \"B\" in kwargs` or similar.\r\n> \r\n> I think a more general solution is dealing with `frame=None` (i.e. removing `kwargs[\"B\"]` if it's None) in the `@use_alias` decorator.\r\n\r\nI think we should refactor those cases that use logic like `if \"B\" in kwargs\"` to use `get` rather than adding more functionality to the `use_alias` decorator.\r\n\r\n",
            "created_at": "2022-03-28T19:14:57Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081039054",
            "id": 1081039054,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Ab1jO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081039054/reactions"
            },
            "updated_at": "2022-03-28T19:14:57Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081039054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > > I may have got a generic solution for the bug fix in #1815 by modifying the `args_in_kwargs` function, but needs a bit more testing and handling of edge cases.\r\n> > \r\n> > \r\n> > I don't think your solution in #1815 is general, because sometimes we don't use `args_in_kwagrs`, instead, we simply check `if \"B\" in kwargs` or similar.\r\n> > I think a more general solution is dealing with `frame=None` (i.e. removing `kwargs[\"B\"]` if it's None) in the `@use_alias` decorator.\r\n> \r\n> I think we should refactor those cases that use logic like `if \"B\" in kwargs\"` to use `get` rather than adding more functionality to the `use_alias` decorator.\r\n\r\nAgree with using `.get`, but we'll need to make sure it treats 0 as a number and not as a boolean `False` (see https://github.com/GenericMappingTools/pygmt/pull/1815#discussion_r825541819).",
            "created_at": "2022-03-28T19:30:22Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081054348",
            "id": 1081054348,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Ab5SM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081054348/reactions"
            },
            "updated_at": "2022-03-28T19:30:22Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081054348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Agree with using .get, but we'll need to make sure it treats 0 as a number and not as a boolean False (see https://github.com/GenericMappingTools/pygmt/pull/1815#discussion_r825541819).\r\n\r\nThis isn't a solution for https://github.com/GenericMappingTools/pygmt/pull/1815#discussion_r825541819, but elsewhere ``if kwargs.get(key) is (not) None:`` should not be affected by this edge-case.\r\n\r\n",
            "created_at": "2022-03-28T19:55:23Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081075085",
            "id": 1081075085,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Ab-WN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081075085/reactions"
            },
            "updated_at": "2022-03-28T20:35:33Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081075085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > > I may have got a generic solution for the bug fix in #1815 by modifying the `args_in_kwargs` function, but needs a bit more testing and handling of edge cases.\r\n> > \r\n> > \r\n> > I don't think your solution in #1815 is general, because sometimes we don't use `args_in_kwagrs`, instead, we simply check `if \"B\" in kwargs` or similar.\r\n> > I think a more general solution is dealing with `frame=None` (i.e. removing `kwargs[\"B\"]` if it's None) in the `@use_alias` decorator.\r\n> \r\n> I think we should refactor those cases that use logic like `if \"B\" in kwargs\"` to use `get` rather than adding more functionality to the `use_alias` decorator.\r\n\r\nI'm OK with the `.get` method, but we must be very careful not to use `if \"B\" in kwargs` when writing new codes. ",
            "created_at": "2022-03-29T02:52:29Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081345768",
            "id": 1081345768,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85AdAbo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081345768/reactions"
            },
            "updated_at": "2022-03-29T02:52:29Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1081345768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@weiji14 Do you plan to do the `.get` refactor in #1815? Or someone does it in a separate PR?",
            "created_at": "2022-03-30T13:36:25Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083150499",
            "id": 1083150499,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Aj5Cj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083150499/reactions"
            },
            "updated_at": "2022-03-30T13:36:25Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083150499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yep, I can refactor #1815 to put the logic in the `@use_alias` decorator. Just give me a few hours...",
            "created_at": "2022-03-30T13:40:17Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083154749",
            "id": 1083154749,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Aj6E9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083154749/reactions"
            },
            "updated_at": "2022-03-30T13:40:17Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083154749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yep, I can refactor #1815 to put the logic in the `@use_alias` decorator. Just give me a few hours...\r\n\r\nWait... I thought in https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081039054 @meghanrjones meant to not change the `@use_alias` decorator.",
            "created_at": "2022-03-30T13:45:53Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083160898",
            "id": 1083160898,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Aj7lC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083160898/reactions"
            },
            "updated_at": "2022-03-30T13:45:53Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083160898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Yep, I can refactor #1815 to put the logic in the `@use_alias` decorator. Just give me a few hours...\r\n> \r\n> Wait... I thought in [#1665 (comment)](https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1081039054) @meghanrjones meant to not change the `@use_alias` decorator.\r\n\r\nOh right, so we're using `.get()` on a case by case basis then? I can go with that.",
            "created_at": "2022-03-30T13:48:34Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083163884",
            "id": 1083163884,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Aj8Ts",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083163884/reactions"
            },
            "updated_at": "2022-03-30T13:48:34Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083163884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Oh right, so we're using .get() on a case by case basis then? I can go with that.\r\n\r\nYes, I prefer case-by-base because I think the `@use_alias` decorator already does too much (i.e., is too complicated and not very readable) and that we should look towards getting rid of it once all aliases are wrapped so that the code in the modules is more readable (e.g., ``kwargs.get(\"frame\")`` versus ``kwargs.get(\"B\")``) (xref https://github.com/GenericMappingTools/pygmt/issues/262, which originally referenced getting rid of ``@use_alias``).\r\n\r\nFun opportunity to use walrus operators now that we dropped 3.7, I am a bit jealous \ud83d\ude04 \r\n",
            "created_at": "2022-03-30T13:52:16Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083168031",
            "id": 1083168031,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85Aj9Uf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083168031/reactions"
            },
            "updated_at": "2022-03-30T13:52:16Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083168031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14077947?v=4",
                "events_url": "https://api.github.com/users/maxrjones/events{/privacy}",
                "followers_url": "https://api.github.com/users/maxrjones/followers",
                "following_url": "https://api.github.com/users/maxrjones/following{/other_user}",
                "gists_url": "https://api.github.com/users/maxrjones/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/maxrjones",
                "id": 14077947,
                "login": "maxrjones",
                "node_id": "MDQ6VXNlcjE0MDc3OTQ3",
                "organizations_url": "https://api.github.com/users/maxrjones/orgs",
                "received_events_url": "https://api.github.com/users/maxrjones/received_events",
                "repos_url": "https://api.github.com/users/maxrjones/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/maxrjones/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/maxrjones/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/maxrjones"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually, I might do 2 PRs\r\n1. Refactor `args_in_kwargs` in #1815 which should fix the problem in `basemap`, `coast`, `grdgradient`, etc that use `args_in_kwargs`.\r\n2. Replace `if \"I\" in kwargs` with `kwargs.get(\"I\") is not None` to fix #1852 and other functions that do that.",
            "created_at": "2022-03-30T14:08:33Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1083187213",
            "id": 1083187213,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85AkCAN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083187213/reactions"
            },
            "updated_at": "2022-03-30T14:09:18Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1083187213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As discussed in above comments, when none of -A, -B, -D, -L, -T is passed, it makes sense to set `frame=True`, rather than raising an exception.\r\n\r\nI'm reopening the issue to track the above feature request.\r\n",
            "created_at": "2022-04-03T14:29:49Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665#issuecomment-1086881221",
            "id": 1086881221,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
            "node_id": "IC_kwDOBRZfO85AyH3F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1086881221/reactions"
            },
            "updated_at": "2022-04-03T14:29:49Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/1086881221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665/comments",
    "created_at": "2021-12-14T14:16:58Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1665",
    "id": 1079813322,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        },
        {
            "color": "29bc9c",
            "default": false,
            "description": "New feature wanted",
            "id": 835519777,
            "name": "feature request",
            "node_id": "MDU6TGFiZWw4MzU1MTk3Nzc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/feature%20request"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2022-07-05T13:19:49Z",
        "closed_issues": 100,
        "created_at": "2021-11-06T22:12:34Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
            "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
            "followers_url": "https://api.github.com/users/weiji14/followers",
            "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
            "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/weiji14",
            "id": 23487320,
            "login": "weiji14",
            "node_id": "MDQ6VXNlcjIzNDg3MzIw",
            "organizations_url": "https://api.github.com/users/weiji14/orgs",
            "received_events_url": "https://api.github.com/users/weiji14/received_events",
            "repos_url": "https://api.github.com/users/weiji14/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/weiji14"
        },
        "description": null,
        "due_on": null,
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/12",
        "id": 7333793,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/12/labels",
        "node_id": "MI_kwDOBRZfO84Ab-eh",
        "number": 12,
        "open_issues": 0,
        "state": "closed",
        "title": "0.7.0",
        "updated_at": "2022-07-05T13:19:49Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/12"
    },
    "node_id": "I_kwDOBRZfO85AXKTK",
    "number": 1665,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665/timeline",
    "title": "Setting frame=None gives unexpected results",
    "updated_at": "2022-04-30T05:07:57Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1665",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14314623?v=4",
        "events_url": "https://api.github.com/users/jbusecke/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbusecke/followers",
        "following_url": "https://api.github.com/users/jbusecke/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbusecke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbusecke",
        "id": 14314623,
        "login": "jbusecke",
        "node_id": "MDQ6VXNlcjE0MzE0NjIz",
        "organizations_url": "https://api.github.com/users/jbusecke/orgs",
        "received_events_url": "https://api.github.com/users/jbusecke/received_events",
        "repos_url": "https://api.github.com/users/jbusecke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbusecke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbusecke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbusecke"
    }
}