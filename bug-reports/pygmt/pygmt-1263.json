{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "**Description of the problem**\r\n\r\n<!-- Please be as detailed as you can when describing an issue. The more information we have, the easier it will be for us to track this down. -->\r\n\r\n`xarray` v0.18 released on 6 May 2021 (see changelog at https://xarray.pydata.org/en/v0.18.0/whats-new.html) resulted in some API changes and this is breaking PyGMT tests that are trying to read from a *.grd file. Specifically the earth relief grids from the `pygmt.datasets.load_earth_relief` function don't work, and I think it also segfaults on Windows so it is a **major** issue.\r\n\r\nFor users: Temporary solution would be to downgrade to xarray v0.17.0 if you want to continue using the `load_earth_relief` function.\r\n\r\nFor PyGMT developers, we probably need to explicitly set an 'engine' in the `xarray.open_dataarray()` calls we make. Or we could post an upstream issue to `xarray` to handle *.grd files natively. Thoughts?\r\n\r\n**Full code that generated the error**\r\n\r\n```python\r\nPASTE CODE HERE\r\n```\r\n\r\n**Full error message**\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/runs/2523330164?check_suite_focus=true#step:11:1994\r\n\r\n<details>\r\n\r\n```python-traceback\r\n=================================== FAILURES ===================================\r\n________________ [doctest] pygmt.accessors.GMTDataArrayAccessor ________________\r\n011 \r\n012     This is the GMT extension for :class:`xarray.DataArray`.\r\n013 \r\n014     You can access various GMT specific metadata about your grid as follows:\r\n015 \r\n016     >>> from pygmt.datasets import load_earth_relief\r\n017     >>> # Use the global Earth relief grid with 1 degree spacing\r\n018     >>> grid = load_earth_relief(resolution=\"01d\")\r\nUNEXPECTED EXCEPTION: ValueError('cannot guess the engine, try passing one explicitly')\r\nTraceback (most recent call last):\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/doctest.py\", line 1337, in __run\r\n    compileflags, 1), test.globs)\r\n  File \"<doctest pygmt.accessors.GMTDataArrayAccessor[1]>\", line 1, in <module>\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/helpers/decorators.py\", line 438, in new_module\r\n    return module_func(*args, **kwargs)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/datasets/earth_relief.py\", line 136, in load_earth_relief\r\n    with xr.open_dataarray(fname) as dataarray:\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 673, in open_dataarray\r\n    **kwargs,\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 485, in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py\", line 112, in guess_engine\r\n    raise ValueError(\"cannot guess the engine, try passing one explicitly\")\r\nValueError: cannot guess the engine, try passing one explicitly\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/accessors.py:18: UnexpectedException\r\n_____________ [doctest] pygmt.clib.conversion.dataarray_to_matrix ______________\r\n040     ------\r\n041     GMTInvalidInput\r\n042         If the grid has more than two dimensions or variable grid spacing.\r\n043 \r\n044     Examples\r\n045     --------\r\n046 \r\n047     >>> from pygmt.datasets import load_earth_relief\r\n048     >>> # Use the global Earth relief grid with 1 degree spacing\r\n049     >>> grid = load_earth_relief(resolution=\"01d\")\r\nUNEXPECTED EXCEPTION: ValueError('cannot guess the engine, try passing one explicitly')\r\nTraceback (most recent call last):\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/doctest.py\", line 1337, in __run\r\n    compileflags, 1), test.globs)\r\n  File \"<doctest pygmt.clib.conversion.dataarray_to_matrix[1]>\", line 1, in <module>\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/helpers/decorators.py\", line 438, in new_module\r\n    return module_func(*args, **kwargs)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/datasets/earth_relief.py\", line 136, in load_earth_relief\r\n    with xr.open_dataarray(fname) as dataarray:\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 673, in open_dataarray\r\n    **kwargs,\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 485, in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py\", line 112, in guess_engine\r\n    raise ValueError(\"cannot guess the engine, try passing one explicitly\")\r\nValueError: cannot guess the engine, try passing one explicitly\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/clib/conversion.py:49: UnexpectedException\r\n_____________________ [doctest] pygmt.clib.session.Session _____________________\r\n095         If you try to call a method outside of a 'with' block.\r\n096     GMTVersionError\r\n097         If the minimum required version of GMT is not found.\r\n098 \r\n099     Examples\r\n100     --------\r\n101 \r\n102     >>> from pygmt.datasets import load_earth_relief\r\n103     >>> from pygmt.helpers import GMTTempFile\r\n104     >>> grid = load_earth_relief()\r\nUNEXPECTED EXCEPTION: ValueError('cannot guess the engine, try passing one explicitly')\r\nTraceback (most recent call last):\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/doctest.py\", line 1337, in __run\r\n    compileflags, 1), test.globs)\r\n  File \"<doctest pygmt.clib.session.Session[2]>\", line 1, in <module>\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/helpers/decorators.py\", line 438, in new_module\r\n    return module_func(*args, **kwargs)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/datasets/earth_relief.py\", line 136, in load_earth_relief\r\n    with xr.open_dataarray(fname) as dataarray:\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 673, in open_dataarray\r\n    **kwargs,\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 485, in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py\", line 112, in guess_engine\r\n    raise ValueError(\"cannot guess the engine, try passing one explicitly\")\r\nValueError: cannot guess the engine, try passing one explicitly\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/clib/session.py:104: UnexpectedException\r\n__________ [doctest] pygmt.clib.session.Session.virtualfile_from_grid __________\r\n277         fname : str\r\n278             The name of virtual file. Pass this as a file name argument to a\r\n279             GMT module.\r\n280 \r\n281         Examples\r\n282         --------\r\n283 \r\n284         >>> from pygmt.datasets import load_earth_relief\r\n285         >>> from pygmt.helpers import GMTTempFile\r\n286         >>> data = load_earth_relief(resolution=\"01d\")\r\nUNEXPECTED EXCEPTION: ValueError('cannot guess the engine, try passing one explicitly')\r\nTraceback (most recent call last):\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/doctest.py\", line 1337, in __run\r\n    compileflags, 1), test.globs)\r\n  File \"<doctest pygmt.clib.session.Session.virtualfile_from_grid[2]>\", line 1, in <module>\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/helpers/decorators.py\", line 438, in new_module\r\n    return module_func(*args, **kwargs)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/datasets/earth_relief.py\", line 136, in load_earth_relief\r\n    with xr.open_dataarray(fname) as dataarray:\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 673, in open_dataarray\r\n    **kwargs,\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py\", line 485, in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n  File \"/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py\", line 112, in guess_engine\r\n    **kwargs,\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py:485: in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nstore_spec = '/home/runner/.gmt/server/earth/earth_relief/earth_relief_30m_g.grd'\r\n\r\n    def guess_engine(store_spec):\r\n        engines = list_engines()\r\n    \r\n        for engine, backend in engines.items():\r\n            try:\r\n                if backend.guess_can_open and backend.guess_can_open(store_spec):\r\n                    return engine\r\n            except Exception:\r\n                warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\r\n    \r\n>       raise ValueError(\"cannot guess the engine, try passing one explicitly\")\r\nE       ValueError: cannot guess the engine, try passing one explicitly\r\n\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py:112: ValueError\r\n_________________________________ test_grdinfo _________________________________\r\n\r\n    def test_grdinfo():\r\n        \"\"\"\r\n        Make sure grdinfo works as expected.\r\n        \"\"\"\r\n>       grid = load_earth_relief(registration=\"gridline\")\r\n\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/tests/test_grdinfo.py:15: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/helpers/decorators.py:438: in new_module\r\n    return module_func(*args, **kwargs)\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/pygmt/datasets/earth_relief.py:136: in load_earth_relief\r\n    with xr.open_dataarray(fname) as dataarray:\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py:673: in open_dataarray\r\n    **kwargs,\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/api.py:485: in open_dataset\r\n    engine = plugins.guess_engine(filename_or_obj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nstore_spec = '/home/runner/.gmt/server/earth/earth_relief/earth_relief_01d_g.grd'\r\n\r\n    def guess_engine(store_spec):\r\n        engines = list_engines()\r\n    \r\n        for engine, backend in engines.items():\r\n            try:\r\n                if backend.guess_can_open and backend.guess_can_open(store_spec):\r\n                    return engine\r\n            except Exception:\r\n                warnings.warn(f\"{engine!r} fails while guessing\", RuntimeWarning)\r\n    \r\n>       raise ValueError(\"cannot guess the engine, try passing one explicitly\")\r\nE       ValueError: cannot guess the engine, try passing one explicitly\r\n\r\n/usr/share/miniconda3/envs/pygmt/lib/python3.7/site-packages/xarray/backends/plugins.py:112: ValueError\r\n```\r\n\r\n</details>\r\n\r\n**System information**\r\n\r\nPlease paste the output of `python -c \"import pygmt; pygmt.show_versions()\"`:\r\n\r\n```\r\nPyGMT information:\r\n  version: v0.3.2.dev131+gb51e3c2\r\nSystem information:\r\n  python: 3.9.2 | packaged by conda-forge | (default, Feb 21 2021, 05:02:46)  [GCC 9.3.0]\r\n  executable: /usr/share/miniconda3/envs/pygmt/bin/python\r\n  machine: Linux-5.4.0-1046-azure-x86_64-with-glibc2.31\r\nDependency information:\r\n  numpy: 1.20.2\r\n  pandas: 1.2.4\r\n  xarray: 0.18.0\r\n  netCDF4: 1.5.6\r\n  packaging: 20.9\r\n  ghostscript: 9.53.3\r\n  gmt: 6.2.0rc1\r\nGMT library information:\r\n  binary dir: /usr/share/miniconda3/envs/pygmt/bin\r\n  cores: 2\r\n  grid layout: rows\r\n  library path: /usr/share/miniconda3/envs/pygmt/lib/libgmt.so\r\n  padding: 2\r\n  plugin dir: /usr/share/miniconda3/envs/pygmt/lib/gmt/plugins\r\n  share dir: /usr/share/miniconda3/envs/pygmt/share/gmt\r\n  version: 6.2.0rc1\r\n```\r\n",
    "closed_at": "2021-05-07T01:31:21Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    },
    "comments": 0,
    "comments_content": [],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263/comments",
    "created_at": "2021-05-07T01:30:09Z",
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/issues/1263",
    "id": 878296206,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        },
        {
            "color": "cccccc",
            "default": true,
            "description": "This issue or pull request already exists",
            "id": 563309828,
            "name": "duplicate",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjg=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2021-06-21T14:49:45Z",
        "closed_issues": 244,
        "created_at": "2020-11-21T04:47:19Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
            "events_url": "https://api.github.com/users/seisman/events{/privacy}",
            "followers_url": "https://api.github.com/users/seisman/followers",
            "following_url": "https://api.github.com/users/seisman/following{/other_user}",
            "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seisman",
            "id": 3974108,
            "login": "seisman",
            "node_id": "MDQ6VXNlcjM5NzQxMDg=",
            "organizations_url": "https://api.github.com/users/seisman/orgs",
            "received_events_url": "https://api.github.com/users/seisman/received_events",
            "repos_url": "https://api.github.com/users/seisman/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seisman"
        },
        "description": "",
        "due_on": "2021-06-20T07:00:00Z",
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/6",
        "id": 6133205,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjEzMzIwNQ==",
        "number": 6,
        "open_issues": 0,
        "state": "closed",
        "title": "0.4.0",
        "updated_at": "2021-11-03T23:29:33Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/6"
    },
    "node_id": "MDU6SXNzdWU4NzgyOTYyMDY=",
    "number": 1263,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263/timeline",
    "title": "ValueError cannot guess the engine, try passing one explicitly with xarray 0.18",
    "updated_at": "2021-05-07T01:31:21Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/1263",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    }
}