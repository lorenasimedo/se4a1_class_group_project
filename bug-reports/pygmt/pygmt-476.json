{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "**Description of proposed changes**\r\n\r\n`xarray` assumes `pixel` registration (aka data values represent centre of the pixel), whereas GMT defaults to using `gridline` registration (aka data values represent top left corner of pixel). PyGMT currently defaults to `gridline` registration, following upstream GMT, but users have no way to easily set it to `pixel` registration.\r\n\r\n![Gridline vs Pixel registration](https://docs.generic-mapping-tools.org/latest/_images/GMT_registration.png)\r\n\r\nSee http://xarray.pydata.org/en/stable/plotting.html#coordinates and https://docs.generic-mapping-tools.org/latest/cookbook/options.html#grid-registration-the-r-option for context. NOAA also has a good page that talks about grid registration at https://ngdc.noaa.gov/mgg/global/gridregistration.html\r\n\r\n![Grid vs Cell registration](https://ngdc.noaa.gov/mgg/image/gridregistrationfigure1.gif)\r\n\r\n<!-- Please describe changes proposed and **why** you made them. If unsure, open an issue first so we can discuss.-->\r\n\r\nThis is a major bug, and may cause breaking changes for some users. Users will have to be aware of what type of registration their raster grids' are using, and unfortunately, those using `xarray` may need to set the registration manually to **p** (for pixel) for correctness, unless we default to using `pixel` registration in PyGMT. Alternatively, the [`salem`](https://salem.readthedocs.io) library has an xarray accessor to represent an xarray grid as a [center_grid](https://salem.readthedocs.io/en/v0.2.3/generated/salem.Grid.center_grid.html#salem-grid-center-grid) or [corner_grid](https://salem.readthedocs.io/en/v0.2.3/generated/salem.Grid.corner_grid.html#salem.Grid.corner_grid), as used in https://github.com/weiji14/deepbedmap/pull/150.\r\n\r\nWill be good to have some discussion on what's the best plan forward.\r\n\r\n<!-- If fixing an issue, put the issue number after the # below (no spaces). Github will automatically close it when this gets merged. -->\r\nFixes #375? #390? Needed for #451.\r\n\r\n\r\n**Reminders**\r\n\r\n- [ ] Run `make format` and `make check` to make sure the code follows the style guide.\r\n- [ ] Add tests for new features or tests that would have caught the bug that you're fixing.\r\n- [ ] Add new public functions/methods/classes to `doc/api/index.rst`.\r\n- [ ] Write detailed docstrings for all functions/methods.\r\n- [ ] If adding new functionality, add an example to docstrings or tutorials.\r\n",
    "closed_at": "2020-07-16T05:34:39Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    },
    "comments": 23,
    "comments_content": [
        {
            "author_association": "MEMBER",
            "body": "Ok, it's getting late in my timezone, but I just want to jot down some notes before bedtime. Please correct me if I'm wrong! But I think we should check Line 105 in the code block below.\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/blob/0267dd15c7626f5903cdb5a3e12ca545d70c884a/pygmt/clib/conversion.py#L90-L113\r\n\r\nSpecifically, the code `region.extend([coord.min(), coord.max()])` can't surely be valid for both **gridline** and **pixel** registered cases. If I'm thinking properly, it is incorrect for the **pixel** registered case (which `xarray` uses) by a pixel, the region should be something like `coord.min() - inc/2, coord.max() + inc/2`).\r\n\r\nI've commited a small change at bb7afdcc0bf6d74bbba7ea52ec116c6e46f98964, and have been testing out both `GMT_GRID_NODE_REG` and `GMT_GRID_PIXEL_REG`, but they both result in the same figure. Here's a minimal test case I've been playing with.\r\n\r\n```python\r\nimport pygmt\r\nimport xarray as xr\r\n\r\nfig = pygmt.Figure()\r\ngrid = xr.DataArray(data=[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6], [0.7, 0.8, 0.9]])\r\nfig.grdimage(grid=grid, region=[-2, 2, -2, 2], projection=\"X5c\", frame=True)\r\nfig.savefig(\"pixel_or_node_registration.png\")\r\nfig.show()\r\n```\r\n\r\nproduces:\r\n\r\n![pixel_registration](https://user-images.githubusercontent.com/23487320/84268350-9e193280-ab7b-11ea-895e-7f2624d51c1f.png)\r\n\r\nThis is with the current default gridline settings you can try at https://github.com/GenericMappingTools/try-gmt. Notice how each pixel/square is centred on non-decimal coordinates (i.e. (0,0), (0,1), (0,2), (1,1), etc), and that a 3x3 grid is produced. The same figure is produced if I try using pixel registration, and I feel that it's wrong somehow but my brain can't explain it properly. ~~Will continue tomorrow~~. Edit: Got a bit caught up with other commitments, feel free to jump in anyone if you have any ideas on how to fix this bug.\r\n",
            "created_at": "2020-06-10T12:56:41Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-641988418",
            "id": 641988418,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTk4ODQxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/641988418/reactions"
            },
            "updated_at": "2020-06-17T11:22:35Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/641988418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Specifically, the code region.extend([coord.min(), coord.max()]) can't surely be valid for both gridline and pixel registered cases. If I'm thinking properly, it is incorrect for the pixel registered case (which xarray uses) by a pixel, the region should be something like coord.min() - inc/2, coord.max() + inc/2).\r\n\r\nFound a way to illustrate this problem: when running `grdinfo` at https://github.com/GenericMappingTools/try-gmt on the actual grd file vs the virtual earth_relief grid:\r\n\r\n```python\r\nimport pprint\r\nimport pygmt\r\n\r\npprint.pprint(pygmt.grdinfo(\"@earth_relief_60m\"), width=1000)\r\n```\r\nproduces:\r\n```\r\n('/home/jovyan/.gmt/server/earth_relief_60m.grd: Title: Earth Relief at 01 arc degree\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: Command: grdfilter SRTM15+V2.1.nc -Fg111.2 -D1 -I01d -rp -Gearth/earth_relief/earth_relief_01d_p.grd=ns+s0.5+o0 --IO_NC4_DEFLATION_LEVEL=9 --IO_NC4_CHUNK_SIZE=4096 --PROJ_ELLIPSOID=Sphere\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: Remark: Obtained by Gaussian Cartesian filtering (111.2 km fullwidth) from SRTM15+V2.1.nc [Tozer et al., 2019; http://dx.doi.org/10.1029/2019EA000658]\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: Pixel node registration used [Geographic grid]\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: Grid file format: ns = GMT netCDF format (16-bit integer), CF-1.7\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: x_min: -180 x_max: 180 x_inc: 1 name: longitude n_columns: 360\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: y_min: -90 y_max: 90 y_inc: 1 name: latitude n_rows: 180\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: z_min: -8182 z_max: 5651.5 name: elevation (m)\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: scale_factor: 0.5 add_offset: 0 packed z-range: [-16364,11303]\\n'\r\n '/home/jovyan/.gmt/server/earth_relief_60m.grd: format: netCDF-4 chunk_size: 180,180 shuffle: on deflation_level: 9\\n')\r\n```\r\nwhereas\r\n```python\r\ngrid = pygmt.datasets.earth_relief.load_earth_relief()\r\npprint.pprint(pygmt.grdinfo(grid))\r\n```\r\nproduces\r\n```\r\n(': Title: \\n'\r\n ': Command: \\n'\r\n ': Remark: \\n'\r\n ': Gridline node registration used [Cartesian grid]\\n'\r\n ': Unrecognized grid file format! Probably not a GMT grid\\n'\r\n ': x_min: -179.5 x_max: 179.5 x_inc: 1 name:  n_columns: 360\\n'\r\n ': y_min: -89.5 y_max: 89.5 y_inc: 1 name:  n_rows: 180\\n'\r\n ': z_min: -8182 z_max: 5651.5 name: z\\n'\r\n ': scale_factor: 1 add_offset: 0\\n')\r\n```\r\n\r\nNotice how the x_min/x_max of the virtual file isn't at -180/180, ditto with y_min/y_max. Plus it thinks the grid is gridline registered, rather than pixel registered. Also, doesn't seem okay treating the grid as Cartesian instead of Geographic (but that's probably a separate issue with the virtualfile mechanism). Not sure if it's a limitation of the [`GMT_Create_Data`](https://docs.generic-mapping-tools.org/dev/api.html#gmt-create-data) C API? I've pushed a commit using `GMT_GRID_PIXEL_REG` as the default to see how things turn out. Edit: It runs into a Segmentation Fault :fearful:",
            "created_at": "2020-06-19T13:13:23Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-646628740",
            "id": 646628740,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjYyODc0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/646628740/reactions"
            },
            "updated_at": "2020-06-19T13:23:44Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/646628740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There may be a potential bug in GMT. Please follow https://github.com/GenericMappingTools/gmt/issues/3502 and https://github.com/GenericMappingTools/gmt/pull/3503 for upstream feedback.",
            "created_at": "2020-06-20T04:00:52Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-646935950",
            "id": 646935950,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjkzNTk1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/646935950/reactions"
            },
            "updated_at": "2020-06-20T04:00:52Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/646935950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's confirmed that there was a bug when passing a pixel-registered matrix to GMT C API. It was already fixed in https://github.com/GenericMappingTools/gmt/pull/3503 and merged in to master. I can confirm that the current PR works well. Thus what we need to do is: \r\n\r\n1. decide the default registration for array data\r\n2. try our best to detect and guess the grid registration (especially for netcdf file loaded as xarray)\r\n3. let users specify the registration they want to use\r\n4. wait for the GMT 6.1 release.",
            "created_at": "2020-06-20T14:31:11Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647003051",
            "id": 647003051,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzAwMzA1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647003051/reactions"
            },
            "updated_at": "2020-06-20T14:31:11Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647003051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> doesn't seem okay treating the grid as Cartesian instead of Geographic (but that's probably a separate issue with the virtualfile mechanism). Not sure if it's a limitation of the [`GMT_Create_Data`](https://docs.generic-mapping-tools.org/dev/api.html#gmt-create-data) C API?\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/blob/86c46f075d6f68a1367bc0fad161f98ba99c14c3/pygmt/clib/session.py#L1243\r\n\r\nChanging `GMT_CONTAINER_ONLY` to `GMT_CONTAINER_ONLY|GMT_GRID_IS_GEO`, then GMT will know it's a geographic grid.\r\n",
            "created_at": "2020-06-22T20:33:11Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647755091",
            "id": 647755091,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc1NTA5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647755091/reactions"
            },
            "updated_at": "2020-06-22T20:33:11Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647755091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It's confirmed that there was a bug when passing a pixel-registered matrix to GMT C API. It was already fixed in [GenericMappingTools/gmt#3503](https://github.com/GenericMappingTools/gmt/pull/3503) and merged in to master. I can confirm that the current PR works well. Thus what we need to do is:\r\n> \r\n>     1. decide the default registration for array data\r\n> \r\n>     2. try our best to detect and guess the grid registration (especially for netcdf file loaded as xarray)\r\n\r\nI've added an automatic gridline/pixel registration detector in 6d4ece422fc155d61ca0d288d6207a0b0dca79ae. It simply does `grdinfo` on the xarray.DataArray's NetCDF source (specifically via [`grid.encoding[\"source\"]`](http://xarray.pydata.org/en/v0.15.1/io.html#reading-encoded-data), and will work on the `earth_relief` grids. If that doesn't work (e.g. for grids generated purely in Python), it will fallback to gridline registration by default.\r\n",
            "created_at": "2020-06-23T04:01:56Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647893644",
            "id": 647893644,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzg5MzY0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647893644/reactions"
            },
            "updated_at": "2020-06-23T04:01:56Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647893644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I've added an automatic gridline/pixel registration detector in [6d4ece4](https://github.com/GenericMappingTools/pygmt/commit/6d4ece422fc155d61ca0d288d6207a0b0dca79ae). It simply does `grdinfo` on the xarray.DataArray's NetCDF source (specifically via [`grid.encoding[\"source\"]`](http://xarray.pydata.org/en/v0.15.1/io.html#reading-encoded-data), and will work on the `earth_relief` grids. If that doesn't work (e.g. for grids generated purely in Python), it will fallback to gridline registration by default.\r\n\r\nI thought it may be simple to save the registration information to xarray.DataArray's `attrs` dict, i.e.,  dem.attrs['registration'] = \"pixel\" or \"gridline\". \r\n\r\n1. If `dem.attrs['registration']` is defined by users or by the `load_earth_relief()` function, then PyGMT should pass the registration directly to GMT\r\n2. If it's undefined, try to automatically detect it\r\n3. If auto-detect fails, fall backs to the default registration.\r\n\r\nFYI, the implementation may be totally different and simplified if our next target release is for GMT 6.1.0.\r\n\r\n1. In GMT 6.1.0, earth_relief data have both pixel and gridline registration. It means we need to change the `load_earth_relief()` function to accept argument like `registration=\"pixel\"` or `registration=\"gridline\"`. Thus, we may know the registration information directly from the argument (it has a default), and no need to call `grdinfo`. \r\n\r\n2. earth_relief data now have file names like `earth_relief_xxy_p` or `earth_relief_xxy_g`. We may get the registration information by parsing the file name.\r\n\r\n3. In GMT 6.1.0, `grdinfo -C` returns the grid registration as the last column of the output.\r\n\r\n",
            "created_at": "2020-06-23T05:03:53Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647909442",
            "id": 647909442,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzkwOTQ0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647909442/reactions"
            },
            "updated_at": "2020-06-23T05:03:53Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647909442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I thought it may be simple to save the registration information to xarray.DataArray's `attrs` dict, i.e., dem.attrs['registration'] = \"pixel\" or \"gridline\".\r\n> \r\n> 1. If `dem.attrs['registration']` is defined by users or by the `load_earth_relief()` function, then PyGMT should pass the registration directly to GMT\r\n> \r\n> 2. If it's undefined, try to automatically detect it\r\n> \r\n> 3. If auto-detect fails, fall backs to the default registration.\r\n\r\nSo 2 and 3 are implemented already in this PR. As for 1, I agree that users should be able to define \"pixel\" or \"gridline\" as they like, but I'm not sure if using `dem.attrs[\"registration\"]` is a good idea. To be honest, `xarray` doesn't handle CRS/Projection information well either (see https://github.com/pydata/xarray/issues/2288), even for CF valid datasets, and the last thing the geo- community wants is another standard for handling geographic information in grids as per https://xkcd.com/927/.\r\n\r\n> \r\n> FYI, the implementation may be totally different and simplified if our next target release is for GMT 6.1.0.\r\n> \r\n> 1. In GMT 6.1.0, earth_relief data have both pixel and gridline registration. It means we need to change the `load_earth_relief()` function to accept argument like `registration=\"pixel\"` or `registration=\"gridline\"`. Thus, we may know the registration information directly from the argument (it has a default), and no need to call `grdinfo`.\r\n> \r\n> 2. earth_relief data now have file names like `earth_relief_xxy_p` or `earth_relief_xxy_g`. We may get the registration information by parsing the file name.\r\n> \r\n> 3. In GMT 6.1.0, `grdinfo -C` returns the grid registration as the last column of the output.\r\n\r\nWe'll need to think of other non earth_relief grids too, not just the earth_relief ones. We *could* treat the earth_relief grids as a special case I suppose, if there is say, a speed benefit of not running `grdinfo` first? Good to know about `grdinfo -C`, will refactor the code after GMT 6.1.0.",
            "created_at": "2020-06-23T05:30:01Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647917361",
            "id": 647917361,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzkxNzM2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647917361/reactions"
            },
            "updated_at": "2020-06-23T05:30:01Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647917361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As for 1, I agree that users should be able to define \"pixel\" or \"gridline\" as they like, but I'm not sure if using `dem.attrs[\"registration\"]` is a good idea. \r\n\r\nI don't know much about the standards (TLTR). To me, `dem.attrs[\"registration\"]` is simple, and easy to keep backward compatibility if we find a real standard in the future, unless the standard uses `registration` for other purposes.\r\n\r\n> We'll need to think of other non earth_relief grids too, not just the earth_relief ones. \r\n\r\nI think all GMT remote files follow the same naming convention. See https://github.com/GenericMappingTools/gmtserver-admin/issues/44.\r\n\r\n",
            "created_at": "2020-06-23T06:51:51Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647946360",
            "id": 647946360,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzk0NjM2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647946360/reactions"
            },
            "updated_at": "2020-06-23T06:51:51Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647946360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Users will have to be aware of what type of registration their raster grids' are using, and unfortunately, those using xarray may need to set the registration manually to p (for pixel) for correctness, unless we default to using pixel registration in PyGMT. \r\n\r\nWhenever I use xarray, my xarray grids are gridline registered. In my opinion, we should not assume that a given xarray array is pixel registered. Xarray has a very basic plotting routine that does assume pixel registration, but its my opinion that their plotting routine needs lots of improvement: the addition of gridline registered grids is just one thing that they need to improve.",
            "created_at": "2020-06-23T08:21:38Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-647989297",
            "id": 647989297,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzk4OTI5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647989297/reactions"
            },
            "updated_at": "2020-06-23T08:21:38Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/647989297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8697285?v=4",
                "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarkWieczorek/followers",
                "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarkWieczorek",
                "id": 8697285,
                "login": "MarkWieczorek",
                "node_id": "MDQ6VXNlcjg2OTcyODU=",
                "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs",
                "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events",
                "repos_url": "https://api.github.com/users/MarkWieczorek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarkWieczorek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@weiji14 I saw that you're adding two parameters `coord_sys` and `registration` to some grid-related modules. It seems to work well, but please keep in mind that, GMT can both read and write grids, and PyGMT can read/write grid and xarray.DataArray. Input and output grids may have different registrations, e.g., users may have a gridline-registered grid, and call `grdsample -rp` to produce a pixel-registered grid. ",
            "created_at": "2020-06-25T15:45:21Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649635488",
            "id": 649635488,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTYzNTQ4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649635488/reactions"
            },
            "updated_at": "2020-06-25T15:45:21Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649635488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @weiji14 I saw that you're adding two parameters `coord_sys` and `registration` to some grid-related modules. It seems to work well, but please keep in mind that, GMT can both read and write grids, and PyGMT can read/write grid and xarray.DataArray. Input and output grids may have different registrations, e.g., users may have a gridline-registered grid, and call `grdsample -rp` to produce a pixel-registered grid.\r\n\r\nThanks for reminding me, I'll change `registration` as an alias for `-r` (i.e. output registration) to keep in line with GMT.\r\n\r\nWill need to have a rethink about how to refactor the implementation, all the if-thens are making my head spin, and they slow down the code. Was thinking of using boolean flags like `is_geographic` and `is_pixel_reg`, but the `False`s get wiped out and the `True`s get turned into empty strings `\"\"`.",
            "created_at": "2020-06-25T21:58:18Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649838515",
            "id": 649838515,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTgzODUxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649838515/reactions"
            },
            "updated_at": "2020-06-25T21:58:18Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649838515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I asked Paul about details of grid registration. Here are my questions and his answers.\r\n\r\n**Q1:** Is the \"node_offset\" attribution in netCDF files equivalent to the grid registration, i.e., node_offset = 0 or no node_offset means gridline registration, and node_offset=1 means pixel registration?\r\n\r\n**A1:** Code does this:\r\n```\r\n\t\tif (header->registration == GMT_GRID_PIXEL_REG) {\r\n\t\t\tint reg = header->registration;\r\n\t\t\tgmt_M_err_trap (nc_put_att_int (ncid, NC_GLOBAL, \"node_offset\", NC_LONG, 1U, &reg));\r\n\t\t}\r\n\t\telse\r\n\t\t\tnc_del_att (ncid, NC_GLOBAL, \"node_offset\");\r\n```\r\nSo only if it is pixel reg do we write the registration value, otherwise it is assumed it is gridline reg and we write nothing\r\nWhen reading we check for it:\r\n```\r\n\t\tif (!nc_get_att_int (ncid, NC_GLOBAL, \"node_offset\", &i)) {\t/* GMT wrote the registration in the grid */\r\n\t\t\theader->registration = i;\r\n\t\t\tset_reg = false;\t/* Do not update it below since we know the registration */\r\n\t\t}\r\n```\r\n\r\n**Q2:** Does GMT always write the node_offfset attributes to netCDF files?  \"ncdump earth_relief_01d_p.grd\" does show node_offset=1, but \"ncdump earth_relief_01d_g.grd\" doesn't show the node_offset attribution.\r\n\r\n**A2:** See above.  only GMT pixel grids will have that variable.\r\n\r\n**Q3:** Is the node_offset attribution specific to GMT? Or is it a standard attribution defined by COARDS convention?\r\n\r\n**A3:** I think it is specific to GMT.  If we find it then we know for sure.  Otherwise, we do a lot of checking to figure out what the file really is.  Occasionally we find really shitty files that pretend to be gridline but clearly are pixel (e.g., latitudes in whole degrees going from -89.5 to 89.5). So reading a netcdf grid is complicated since anyone might have created one.",
            "created_at": "2020-06-25T23:17:51Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649864135",
            "id": 649864135,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg2NDEzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649864135/reactions"
            },
            "updated_at": "2020-06-25T23:17:51Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649864135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For any netCDF grids produced by GMT (e.g., earth relief data), we can always check the `node_offset` attribution. If `node_offset=1`, then we know it's pixel registration. If it's not undefined, then it's gridline registration (the default value in GMT). \r\n\r\nAs `node_offset` is specific to GMT, it makes more sense and also easier to detect registration if PyGMT uses gridline registration as the default. For any xarray.DataArray grids (created by users, read from a GMT netCDF file, or read from a netCDF file produced by other tools), automatically detecting grid registration is simply checking the value of the `node_offset` attrs. ",
            "created_at": "2020-06-25T23:28:11Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649867004",
            "id": 649867004,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg2NzAwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649867004/reactions"
            },
            "updated_at": "2020-06-25T23:34:38Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649867004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As mentioned above, I personally prefer to have the registration and coord_sys information in the xarray.DataArray attributes. The reasons are:\r\n\r\n1. No need to add these two parameters to every grd* functions (registration and coord_sys are all internally handled by the virtualfile_from_grid function)\r\n2. Input and output grids can have different registrations and coords_sys, and the codes can be simplified. \r\n\r\nFor example, users can generate a grid by calling `surface()` function, and plot it via `grdimage()`. The `surface()` function has to return registration and coord_sys. Thus, the codes may look like:\r\n```\r\ngrid, registration, coord_sys = surface(...)\r\ngrdimage(grid, registration, coords)\r\n```\r\nIf registration and coord_sys are attributions of a xarray.DataArray object, the code looks like\r\n```\r\ngrid = surface()\r\ngrdimage(grid)\r\n```",
            "created_at": "2020-06-25T23:49:14Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649872282",
            "id": 649872282,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg3MjI4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649872282/reactions"
            },
            "updated_at": "2020-06-25T23:49:14Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649872282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As mentioned above, I personally prefer to have the registration and coord_sys information in the xarray.DataArray attributes. The reasons are:\r\n\r\nOk, then I'll probably have to rename `coord_sys` to something better (I can see it will clashing with the namespace of some other library already). If we're going with a boolean type, maybe something like `is_geographic`? I.e. True (1) is `GMT_GRID_IS_GEO` while False (0) is `GMT_GRID_IS_CARTESIAN` (default).\r\n\r\nAlso, we'll need to do the following:\r\n\r\n1. Change the attribute when [`grdsample -T`](https://docs.generic-mapping-tools.org/dev/grdsample.html#t) or [`grdedit -T`](https://docs.generic-mapping-tools.org/latest/grdedit.html#t) is called (when those functions are wrapped in the future).\r\n2. Document this 'feature' (that an attribute needs to be set to change the registration/coord_sys) somewhere visible.\r\n\r\n",
            "created_at": "2020-06-26T00:09:59Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649877772",
            "id": 649877772,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg3Nzc3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649877772/reactions"
            },
            "updated_at": "2020-06-26T00:09:59Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649877772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Scratch that, let's use `node_offset` (ties in with https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649864135) . I just tried reading the earth_relief grids using [xarray.open_dataset](xarray.pydata.org/en/v0.15.1/generated/xarray.open_dataset.html#xarray.open_dataset) (instead of xarray.open_dataarray), and this is how it looks:\r\n\r\n```\r\n<xarray.Dataset>\r\nDimensions:  (lat: 180, lon: 360)\r\nCoordinates:\r\n  * lon      (lon) float64 -179.5 -178.5 -177.5 -176.5 ... 177.5 178.5 179.5\r\n  * lat      (lat) float64 -89.5 -88.5 -87.5 -86.5 -85.5 ... 86.5 87.5 88.5 89.5\r\nData variables:\r\n    z        (lat, lon) float32 ...\r\nAttributes:\r\n    Conventions:  CF-1.7\r\n    history:      grdfilter SRTM15+V2.1.nc -Fg111.2 -D1 -I01d -rp -Gearth/ear...\r\n    GMT_version:  6.1.0_e80cfbd_2020.05.28 [64-bit]\r\n    node_offset:  1\r\n    title:        Earth Relief at 01 arc degree\r\n    description:  Obtained by Gaussian Cartesian filtering (111.2 km fullwidt...\r\n```\r\n\r\nSo we can follow this 'convention' (actually GMT's) instead of defining our own in PyGMT. We'll just need to modify these lines to propagate the `Dataset` attributes to the `DataArray`:\r\n\r\nhttps://github.com/GenericMappingTools/pygmt/blob/516e799bb9753ed45b9e122b8ebb5fd446320866/pygmt/datasets/earth_relief.py#L40-L52",
            "created_at": "2020-06-26T00:23:13Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-649881240",
            "id": 649881240,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTg4MTI0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649881240/reactions"
            },
            "updated_at": "2020-06-26T00:33:57Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/649881240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Now all the tests pass. Does it mean this PR works?",
            "created_at": "2020-07-16T03:58:32Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659143371",
            "id": 659143371,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE0MzM3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659143371/reactions"
            },
            "updated_at": "2020-07-16T03:58:32Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659143371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Now all the tests pass. Does it mean this PR works?\r\n\r\nShort answer: Yes (and it has always worked for macOS).\r\n\r\nLong answer: See https://github.com/GenericMappingTools/pygmt/pull/476#discussion_r455416772. The tests pass when I run `test_grdimage_over_dateline` **before** the other tests. On my Linux box, it works fine if I just call `grdimage` as normal in a script. But the `make test` fails consistently for some unknown reason.",
            "created_at": "2020-07-16T04:03:49Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659144695",
            "id": 659144695,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE0NDY5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659144695/reactions"
            },
            "updated_at": "2020-07-16T04:03:49Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659144695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is a pytest warning:\r\n```\r\npython3.7/site-packages/_pytest/mark/structures.py:327: PytestUnknownMarkWarning: Unknown pytest.mark.runfirst - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\r\n    PytestUnknownMarkWarning,\r\n```",
            "created_at": "2020-07-16T04:59:15Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659159112",
            "id": 659159112,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE1OTExMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659159112/reactions"
            },
            "updated_at": "2020-07-16T04:59:15Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659159112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just for completeness, although this PR does fix #375, it doesn't fix @MarkWieczorek's reported bug at #390. I tried running the example but couldn't get the cylindrical 'Q' projection to plot in xarray (bottom row), and the Mollweide 'W' projection doesn't work too (middle row). Using a NetCDF file works fine though (top row). This results are the same when ran on the code in this PR or the current master branch at f401f8527cfee4dc8f48d78ad93d23b678ecfbc8, so it might be an upstream GMT 6.1 issue.\r\n\r\n| ![test](https://user-images.githubusercontent.com/23487320/87629579-665b6700-c787-11ea-8146-f1c5efcbe230.png) | ![test](https://user-images.githubusercontent.com/23487320/87629774-ba664b80-c787-11ea-8bf7-3ee0fb047715.png) |\r\n|:--:|:--:|\r\n|This PR| Master branch at f401f8527cfee4dc8f48d78ad93d23b678ecfbc8 |",
            "created_at": "2020-07-16T05:16:14Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659164076",
            "id": 659164076,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE2NDA3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659164076/reactions"
            },
            "updated_at": "2020-07-16T05:16:14Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659164076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I once tried to debug the issue in #390, it seems the boundary conditions are slightly different for an xarray input and a netCDF input. Mostly likely a GMT bug.",
            "created_at": "2020-07-16T05:20:50Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659165352",
            "id": 659165352,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE2NTM1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659165352/reactions"
            },
            "updated_at": "2020-07-16T05:20:50Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659165352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3974108?v=4",
                "events_url": "https://api.github.com/users/seisman/events{/privacy}",
                "followers_url": "https://api.github.com/users/seisman/followers",
                "following_url": "https://api.github.com/users/seisman/following{/other_user}",
                "gists_url": "https://api.github.com/users/seisman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seisman",
                "id": 3974108,
                "login": "seisman",
                "node_id": "MDQ6VXNlcjM5NzQxMDg=",
                "organizations_url": "https://api.github.com/users/seisman/orgs",
                "received_events_url": "https://api.github.com/users/seisman/received_events",
                "repos_url": "https://api.github.com/users/seisman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seisman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seisman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seisman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, the resampling doesn't work properly on virtualfiles perhaps. Will merge and try to track down the problem another time.",
            "created_at": "2020-07-16T05:24:32Z",
            "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476#issuecomment-659166501",
            "id": 659166501,
            "issue_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE2NjUwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659166501/reactions"
            },
            "updated_at": "2020-07-16T05:24:32Z",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/comments/659166501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
                "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
                "followers_url": "https://api.github.com/users/weiji14/followers",
                "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
                "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weiji14",
                "id": 23487320,
                "login": "weiji14",
                "node_id": "MDQ6VXNlcjIzNDg3MzIw",
                "organizations_url": "https://api.github.com/users/weiji14/orgs",
                "received_events_url": "https://api.github.com/users/weiji14/received_events",
                "repos_url": "https://api.github.com/users/weiji14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weiji14"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476/comments",
    "created_at": "2020-06-10T05:27:43Z",
    "draft": false,
    "events_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476/events",
    "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476",
    "id": 635939653,
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Something isn't working",
            "id": 563309827,
            "name": "bug",
            "node_id": "MDU6TGFiZWw1NjMzMDk4Mjc=",
            "url": "https://api.github.com/repos/GenericMappingTools/pygmt/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2020-09-17T21:25:23Z",
        "closed_issues": 55,
        "created_at": "2020-04-16T23:17:22Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
            "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
            "followers_url": "https://api.github.com/users/weiji14/followers",
            "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
            "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/weiji14",
            "id": 23487320,
            "login": "weiji14",
            "node_id": "MDQ6VXNlcjIzNDg3MzIw",
            "organizations_url": "https://api.github.com/users/weiji14/orgs",
            "received_events_url": "https://api.github.com/users/weiji14/received_events",
            "repos_url": "https://api.github.com/users/weiji14/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/weiji14"
        },
        "description": "Bump minimum required GMT version to 6.1.1 or newer (#577). Ensure plotting xarray grids doesn't crash anymore and works for most cases (#560). Support datetime-like inputs to pygmt.plot (#464) and the region argument (#562).",
        "due_on": "2020-09-11T07:00:00Z",
        "html_url": "https://github.com/GenericMappingTools/pygmt/milestone/2",
        "id": 5318234,
        "labels_url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/2/labels",
        "node_id": "MDk6TWlsZXN0b25lNTMxODIzNA==",
        "number": 2,
        "open_issues": 0,
        "state": "closed",
        "title": "0.2.0",
        "updated_at": "2020-10-23T22:19:37Z",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/milestones/2"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyMjExMzM5",
    "number": 476,
    "performed_via_github_app": null,
    "pull_request": {
        "diff_url": "https://github.com/GenericMappingTools/pygmt/pull/476.diff",
        "html_url": "https://github.com/GenericMappingTools/pygmt/pull/476",
        "merged_at": "2020-07-16T05:34:38Z",
        "patch_url": "https://github.com/GenericMappingTools/pygmt/pull/476.patch",
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/pulls/476"
    },
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476/reactions"
    },
    "repository_url": "https://api.github.com/repos/GenericMappingTools/pygmt",
    "state": "closed",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476/timeline",
    "title": "Properly allow for either pixel or gridline registered grids",
    "updated_at": "2020-07-16T05:34:40Z",
    "url": "https://api.github.com/repos/GenericMappingTools/pygmt/issues/476",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23487320?v=4",
        "events_url": "https://api.github.com/users/weiji14/events{/privacy}",
        "followers_url": "https://api.github.com/users/weiji14/followers",
        "following_url": "https://api.github.com/users/weiji14/following{/other_user}",
        "gists_url": "https://api.github.com/users/weiji14/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/weiji14",
        "id": 23487320,
        "login": "weiji14",
        "node_id": "MDQ6VXNlcjIzNDg3MzIw",
        "organizations_url": "https://api.github.com/users/weiji14/orgs",
        "received_events_url": "https://api.github.com/users/weiji14/received_events",
        "repos_url": "https://api.github.com/users/weiji14/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/weiji14/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weiji14/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/weiji14"
    }
}